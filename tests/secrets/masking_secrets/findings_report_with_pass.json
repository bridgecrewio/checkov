{
  "typeId": 1,
  "reportIdentifier": "Iac",
  "items": [
    {
      "assetId": "aws_instance.web_host",
      "instanceId": "817e3415012bdfb417a9a0c7eb527109",
      "observationTime": 1730972024,
      "description": "Ensure Instance Metadata Service Version 1 is not enabled",
      "normalizedFields": {
        "xdm.detection.method": "IAC_SCANNER",
        "xdm.detection.rule_id": "CKV_AWS_79",
        "xdm.code.git.contributors": [],
        "xdm.file.path": "/s3.tf",
        "xdm.file.position.start.line": 1,
        "xdm.file.position.end.line": 19,
        "xdm.code.iac.framework": "TERRAFORM",
        "xdm.code.iac.tags": {}
      },
      "moduleUnstructuredFields": {
        "name": "Ensure Instance Metadata Service Version 1 is not enabled",
        "rule_id": "CKV_AWS_79",
        "rule_name": "Ensure Instance Metadata Service Version 1 is not enabled",
        "rule_category": "Data",
        "rule_description": "Rule description",
        "rule_link": "",
        "manual_fix": "",
        "documentation_link": "https://link_to_doc",
        "issue_data": {
          "severity": "CRITICAL",
          "domain": "POSTURE",
          "detection_method": "IAC_SCANNER",
          "enforcement_level_result": "HARD_FAIL",
          "should_create_pr_comment": true,
          "description": "Ensure Instance Metadata Service Version 1 is not enabled",
          "name": "Ensure Instance Metadata Service Version 1 is not enabled",
          "category": null,
          "owner": null
        },
        "repo_full_name": null,
        "run_id": 1,
        "code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "asset_name": "aws_instance.web_host",
        "inspected_key_line": -1,
        "evaluated_keys": [
          [
            -1,
            "metadata_options/[0]/http_tokens"
          ]
        ],
        "error_lines": [],
        "inspected_key": "metadata_options/[0]/http_tokens",
        "automated_fix": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "automated_fix_code_lines": [
          1,
          19
        ]
      },
      "xdm.finding.first_observed": null,
      "xdm.finding.last_observed": null,
      "xdm.finding.platform_id": null,
      "xdm.finding.owner": "CWP"
    },
    {
      "assetId": "aws_instance.web_host",
      "instanceId": "598a80b2f5d3dd2e5d7c1053f40317e5",
      "observationTime": 1730972024,
      "description": "Ensure no hard-coded secrets exist in EC2 user data",
      "normalizedFields": {
        "xdm.detection.method": "IAC_SCANNER",
        "xdm.detection.rule_id": "CKV_AWS_46",
        "xdm.code.git.contributors": [],
        "xdm.file.path": "/s3.tf",
        "xdm.file.position.start.line": 1,
        "xdm.file.position.end.line": 19,
        "xdm.code.iac.framework": "TERRAFORM",
        "xdm.code.iac.tags": {}
      },
      "moduleUnstructuredFields": {
        "name": "Ensure no hard-coded secrets exist in EC2 user data",
        "rule_id": "CKV_AWS_46",
        "rule_name": "Ensure no hard-coded secrets exist in EC2 user data",
        "rule_category": "Data",
        "rule_description": "Rule description",
        "rule_link": "",
        "manual_fix": "",
        "documentation_link": "https://link_to_doc",
        "issue_data": {
          "severity": "CRITICAL",
          "domain": "POSTURE",
          "detection_method": "IAC_SCANNER",
          "enforcement_level_result": "HARD_FAIL",
          "should_create_pr_comment": true,
          "description": "Ensure no hard-coded secrets exist in EC2 user data",
          "name": "Ensure no hard-coded secrets exist in EC2 user data",
          "category": null,
          "owner": null
        },
        "repo_full_name": null,
        "run_id": 1,
        "code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "asset_name": "aws_instance.web_host",
        "inspected_key_line": 8,
        "evaluated_keys": [
          [
            8,
            "user_data"
          ]
        ],
        "error_lines": [
          8
        ],
        "inspected_key": "user_data",
        "automated_fix": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n}",
        "automated_fix_code_lines": [
          1,
          8
        ]
      },
      "xdm.finding.first_observed": null,
      "xdm.finding.last_observed": null,
      "xdm.finding.platform_id": null,
      "xdm.finding.owner": "CWP"
    },
    {
      "assetId": "aws_instance.web_host",
      "instanceId": "a036e8ec911c32e98bfcac083d78da62",
      "observationTime": 1730972024,
      "description": "Ensure that detailed monitoring is enabled for EC2 instances",
      "normalizedFields": {
        "xdm.detection.method": "IAC_SCANNER",
        "xdm.detection.rule_id": "CKV_AWS_126",
        "xdm.code.git.contributors": [],
        "xdm.file.path": "/s3.tf",
        "xdm.file.position.start.line": 1,
        "xdm.file.position.end.line": 19,
        "xdm.code.iac.framework": "TERRAFORM",
        "xdm.code.iac.tags": {}
      },
      "moduleUnstructuredFields": {
        "name": "Ensure that detailed monitoring is enabled for EC2 instances",
        "rule_id": "CKV_AWS_126",
        "rule_name": "Ensure that detailed monitoring is enabled for EC2 instances",
        "rule_category": "Data",
        "rule_description": "Rule description",
        "rule_link": "",
        "manual_fix": "",
        "documentation_link": "https://link_to_doc",
        "issue_data": {
          "severity": "CRITICAL",
          "domain": "POSTURE",
          "detection_method": "IAC_SCANNER",
          "enforcement_level_result": "HARD_FAIL",
          "should_create_pr_comment": true,
          "description": "Ensure that detailed monitoring is enabled for EC2 instances",
          "name": "Ensure that detailed monitoring is enabled for EC2 instances",
          "category": null,
          "owner": null
        },
        "repo_full_name": null,
        "run_id": 1,
        "code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "asset_name": "aws_instance.web_host",
        "inspected_key_line": -1,
        "evaluated_keys": [
          [
            -1,
            "monitoring"
          ]
        ],
        "error_lines": [],
        "inspected_key": "monitoring",
        "automated_fix": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "automated_fix_code_lines": [
          1,
          19
        ]
      },
      "xdm.finding.first_observed": null,
      "xdm.finding.last_observed": null,
      "xdm.finding.platform_id": null,
      "xdm.finding.owner": "CWP"
    },
    {
      "assetId": "aws_instance.web_host",
      "instanceId": "ee33e8770670ec52907aa48227f62395",
      "observationTime": 1730972024,
      "description": "Ensure that EC2 is EBS optimized",
      "normalizedFields": {
        "xdm.detection.method": "IAC_SCANNER",
        "xdm.detection.rule_id": "CKV_AWS_135",
        "xdm.code.git.contributors": [],
        "xdm.file.path": "/s3.tf",
        "xdm.file.position.start.line": 1,
        "xdm.file.position.end.line": 19,
        "xdm.code.iac.framework": "TERRAFORM",
        "xdm.code.iac.tags": {}
      },
      "moduleUnstructuredFields": {
        "name": "Ensure that EC2 is EBS optimized",
        "rule_id": "CKV_AWS_135",
        "rule_name": "Ensure that EC2 is EBS optimized",
        "rule_category": "Data",
        "rule_description": "Rule description",
        "rule_link": "",
        "manual_fix": "",
        "documentation_link": "https://link_to_doc",
        "issue_data": {
          "severity": "CRITICAL",
          "domain": "POSTURE",
          "detection_method": "IAC_SCANNER",
          "enforcement_level_result": "HARD_FAIL",
          "should_create_pr_comment": true,
          "description": "Ensure that EC2 is EBS optimized",
          "name": "Ensure that EC2 is EBS optimized",
          "category": null,
          "owner": null
        },
        "repo_full_name": null,
        "run_id": 1,
        "code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "asset_name": "aws_instance.web_host",
        "inspected_key_line": -1,
        "evaluated_keys": [
          [
            -1,
            "ebs_optimized"
          ]
        ],
        "error_lines": [],
        "inspected_key": "ebs_optimized",
        "automated_fix": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "automated_fix_code_lines": [
          1,
          19
        ]
      },
      "xdm.finding.first_observed": null,
      "xdm.finding.last_observed": null,
      "xdm.finding.platform_id": null,
      "xdm.finding.owner": "CWP"
    },
    {
      "assetId": "aws_instance.web_host",
      "instanceId": "3a9d400df938f2adb78e0a3f688e2d50",
      "observationTime": 1730972024,
      "description": "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted",
      "normalizedFields": {
        "xdm.detection.method": "IAC_SCANNER",
        "xdm.detection.rule_id": "CKV_AWS_8",
        "xdm.code.git.contributors": [],
        "xdm.file.path": "/s3.tf",
        "xdm.file.position.start.line": 1,
        "xdm.file.position.end.line": 19,
        "xdm.code.iac.framework": "TERRAFORM",
        "xdm.code.iac.tags": {}
      },
      "moduleUnstructuredFields": {
        "name": "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted",
        "rule_id": "CKV_AWS_8",
        "rule_name": "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted",
        "rule_category": "Data",
        "rule_description": "Rule description",
        "rule_link": "",
        "manual_fix": "",
        "documentation_link": "https://link_to_doc",
        "issue_data": {
          "severity": "CRITICAL",
          "domain": "POSTURE",
          "detection_method": "IAC_SCANNER",
          "enforcement_level_result": "HARD_FAIL",
          "should_create_pr_comment": true,
          "description": "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted",
          "name": "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted",
          "category": null,
          "owner": null
        },
        "repo_full_name": null,
        "run_id": 1,
        "code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "asset_name": "aws_instance.web_host",
        "inspected_key_line": -1,
        "evaluated_keys": [
          [
            -1,
            "root_block_device"
          ]
        ],
        "error_lines": [],
        "inspected_key": "root_block_device",
        "automated_fix": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "automated_fix_code_lines": [
          1,
          19
        ]
      },
      "xdm.finding.first_observed": null,
      "xdm.finding.last_observed": null,
      "xdm.finding.platform_id": null,
      "xdm.finding.owner": "CWP"
    },
    {
      "assetId": "aws_instance.web_host",
      "instanceId": "3216f42175952e4391d7ed1c1e231713",
      "observationTime": 1730972024,
      "description": "Ensure an IAM role is attached to EC2 instance",
      "normalizedFields": {
        "xdm.detection.method": "IAC_SCANNER",
        "xdm.detection.rule_id": "CKV2_AWS_41",
        "xdm.code.git.contributors": [],
        "xdm.file.path": "/s3.tf",
        "xdm.file.position.start.line": 1,
        "xdm.file.position.end.line": 19,
        "xdm.code.iac.framework": "TERRAFORM",
        "xdm.code.iac.tags": {}
      },
      "moduleUnstructuredFields": {
        "name": "Ensure an IAM role is attached to EC2 instance",
        "rule_id": "CKV2_AWS_41",
        "rule_name": "Ensure an IAM role is attached to EC2 instance",
        "rule_category": "Data",
        "rule_description": "Rule description",
        "rule_link": "",
        "manual_fix": "",
        "documentation_link": "https://link_to_doc",
        "issue_data": {
          "severity": "CRITICAL",
          "domain": "POSTURE",
          "detection_method": "IAC_SCANNER",
          "enforcement_level_result": "HARD_FAIL",
          "should_create_pr_comment": true,
          "description": "Ensure an IAM role is attached to EC2 instance",
          "name": "Ensure an IAM role is attached to EC2 instance",
          "category": null,
          "owner": null
        },
        "repo_full_name": null,
        "run_id": 1,
        "code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "asset_name": "aws_instance.web_host",
        "inspected_key_line": -1,
        "evaluated_keys": [
          [
            -1,
            "iam_instance_profile"
          ]
        ],
        "error_lines": [],
        "inspected_key": null,
        "automated_fix": "",
        "automated_fix_code_lines": []
      },
      "xdm.finding.first_observed": null,
      "xdm.finding.last_observed": null,
      "xdm.finding.platform_id": null,
      "xdm.finding.owner": "CWP"
    },
    {
      "assetId": "aws_instance.web_host",
      "instanceId": "4a9f8d5b5273289b6e0738a497072318",
      "observationTime": 1730972024,
      "description": "EC2 instance should not have public IP.",
      "normalizedFields": {
        "xdm.detection.method": "IAC_SCANNER",
        "xdm.detection.rule_id": "CKV_AWS_88",
        "xdm.code.git.contributors": [],
        "xdm.file.path": "/s3.tf",
        "xdm.file.position.start.line": 1,
        "xdm.file.position.end.line": 19,
        "xdm.code.iac.framework": "TERRAFORM",
        "xdm.code.iac.tags": {}
      },
      "moduleUnstructuredFields": {
        "name": "EC2 instance should not have public IP.",
        "rule_id": "CKV_AWS_88",
        "rule_name": "EC2 instance should not have public IP.",
        "rule_category": "Data",
        "rule_description": "Rule description",
        "rule_link": "",
        "manual_fix": "",
        "documentation_link": "https://link_to_doc",
        "issue_data": {
          "severity": "CRITICAL",
          "domain": "POSTURE",
          "detection_method": "IAC_SCANNER",
          "enforcement_level_result": "HARD_FAIL",
          "should_create_pr_comment": true,
          "description": "EC2 instance should not have public IP.",
          "name": "EC2 instance should not have public IP.",
          "category": null,
          "owner": null
        },
        "repo_full_name": null,
        "run_id": 1,
        "code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "asset_name": "aws_instance.web_host",
        "inspected_key_line": -1,
        "evaluated_keys": [
          [
            -1,
            "associate_public_ip_address"
          ]
        ],
        "error_lines": [],
        "inspected_key": "associate_public_ip_address",
        "automated_fix": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "automated_fix_code_lines": [
          1,
          19
        ]
      },
      "xdm.finding.first_observed": null,
      "xdm.finding.last_observed": null,
      "xdm.finding.platform_id": null,
      "xdm.finding.owner": "CWP"
    }
  ]
}