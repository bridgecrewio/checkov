{
  "typeId": 1,
  "reportIdentifier": "Iac",
  "items": [
    {
      "assetId": "aws_instance.web_host",
      "moduleUnstructuredFields": {
        "name": "Ensure Instance Metadata Service Version 1 is not enabled",
        "rule_id": "CKV_AWS_79",
        "rule_name": "Ensure Instance Metadata Service Version 1 is not enabled",
        "rule_category": "Data",
        "code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "asset_name": "aws_instance.web_host",
        "inspected_key_line": -1,
        "inspected_key": "metadata_options/[0]/http_tokens",
        "alt_code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}"
      }
    },
    {
      "assetId": "aws_instance.web_host",
      "description": "Ensure no hard-coded secrets exist in EC2 user data",
      "moduleUnstructuredFields": {
        "name": "Ensure no hard-coded secrets exist in EC2 user data",
        "rule_id": "CKV_AWS_46",
        "rule_name": "Ensure no hard-coded secrets exist in EC2 user data",
        "rule_category": "Data",
        "code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "asset_name": "aws_instance.web_host",
        "inspected_key_line": 8,
        "inspected_key": "user_data",
        "alt_code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n}"
      }
    },
    {
      "assetId": "aws_instance.web_host",
      "description": "Ensure that detailed monitoring is enabled for EC2 instances",
      "moduleUnstructuredFields": {
        "name": "Ensure that detailed monitoring is enabled for EC2 instances",
        "rule_id": "CKV_AWS_126",
        "rule_name": "Ensure that detailed monitoring is enabled for EC2 instances",
        "rule_category": "Data",
        "code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "asset_name": "aws_instance.web_host",
        "inspected_key_line": -1,
        "inspected_key": "monitoring",
        "alt_code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}"
      }
    },
    {
      "assetId": "aws_instance.web_host",
      "description": "Ensure that EC2 is EBS optimized",
      "moduleUnstructuredFields": {
        "name": "Ensure that EC2 is EBS optimized",
        "rule_id": "CKV_AWS_135",
        "rule_name": "Ensure that EC2 is EBS optimized",
        "rule_category": "Data",
        "code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "asset_name": "aws_instance.web_host",
        "inspected_key_line": -1,
        "inspected_key": "ebs_optimized",
        "alt_code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}"
      }
    },
    {
      "assetId": "aws_instance.web_host",
      "description": "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted",
      "moduleUnstructuredFields": {
        "name": "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted",
        "rule_id": "CKV_AWS_8",
        "rule_name": "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted",
        "rule_category": "Data",
        "code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "asset_name": "aws_instance.web_host",
        "inspected_key_line": -1,
        "inspected_key": "root_block_device",
        "alt_code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}"
      }
    },
    {
      "assetId": "aws_instance.web_host",
      "description": "Ensure an IAM role is attached to EC2 instance",
      "moduleUnstructuredFields": {
        "name": "Ensure an IAM role is attached to EC2 instance",
        "rule_id": "CKV2_AWS_41",
        "rule_name": "Ensure an IAM role is attached to EC2 instance",
        "rule_category": "Data",
        "code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "asset_name": "aws_instance.web_host",
        "inspected_key_line": -1,
        "alt_code_block": ""
      }
    },
    {
      "assetId": "aws_instance.web_host",
      "description": "EC2 instance should not have public IP.",
      "moduleUnstructuredFields": {
        "name": "EC2 instance should not have public IP.",
        "rule_id": "CKV_AWS_88",
        "rule_name": "EC2 instance should not have public IP.",
        "rule_category": "Data",
        "code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}",
        "asset_name": "aws_instance.web_host",
        "inspected_key_line": -1,
        "inspected_key": "associate_public_ip_address",
        "alt_code_block": "resource \"aws_instance\" \"web_host\" {\n  ami           = \"${var.ami}\"\n  instance_type = \"t2.nano\"\n\n  vpc_security_group_ids = [\n  \"${aws_security_group.web-node.id}\"]\n  subnet_id = \"${aws_subnet.web_subnet.id}\"\n  user_data = <<EOF\n#! /bin/bash\nsudo apt-get update\nsudo apt-get install -y apache2\nsudo systemctl start apache2\nsudo systemctl enable apache2\nexport AWS_ACCESS_KEY_ID=AKIAYNKRE4OV2LF6TC3N\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_DEFAULT_REGION=us-west-2\necho \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\nEOF\n}"
      }
    }
  ]
}