Description: >
  This template deploys an Application Load Balancer with HTTPS listener only
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the Application Load Balancer should be deployed to

  Subnets:
    Description: Choose a minimum of 2 subnets the ALB should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

Resources:

  LoadBalancerPASSED1:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: CheckovTest1
      Subnets: !Ref Subnets
      SecurityGroups:
        - sg-0123456789abcdefc

  LoadBalancerPASSED2:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: CheckovTest2
      Subnets: !Ref Subnets
      SecurityGroups:
        - sg-0123456789abcdefc

  LoadBalancerPASSED3:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: CheckovTest3
      Subnets: !Ref Subnets
      SecurityGroups:
        - sg-0123456789abcdefc

  LoadBalancerPASSED4:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: CheckovTest4
      Subnets: !Ref Subnets
      SecurityGroups:
        - sg-0123456789abcdefc

  LoadBalancerFAILED1:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: CheckovTest5
      Subnets: !Ref Subnets
      SecurityGroups:
        - sg-0123456789abcdefc

  LoadBalancerFAILED2:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: CheckovTest6
      Subnets: !Ref Subnets
      SecurityGroups:
        - sg-0123456789abcdefc

  ListenerHTTPSPASSED1:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancerPASSED1
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: test
      SslPolicy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06
      DefaultActions:
        - Type: forward
          TargetGroupArn: targetGroup

  ListenerHTTPPASSED2:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancerPASSED2
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: "redirect"
          RedirectConfig:
           Protocol: "HTTPS"
           Port: "443"
           Host: "#{host}"
           Path: "/#{path}"
           Query: "#{query}"
           StatusCode: "HTTP_301"

  ListenerTCPPASSED3:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancerPASSED3
      Port: 53
      Protocol: TCP
      DefaultActions:
        - Type: forward
          TargetGroupArn: targetGroup

  ListenerUDPPASSED4:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancerPASSED4
      Port: 53
      Protocol: UDP
      DefaultActions:
        - Type: forward
          TargetGroupArn: targetGroup

  ListenerHTTPFAILED1:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancerFAILED1
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: targetGroup

  ListenerHTTPFAILED2:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancerFAILED2
      Port: 80
      Protocol: "HTTP"
      DefaultActions:
        - Type: "redirect"
          RedirectConfig:
           Protocol: "HTTP"
           Port: "8080"
           Host: "#{host}"
           Path: "/#{path}"
           Query: "#{query}"
           StatusCode: "HTTP_301"