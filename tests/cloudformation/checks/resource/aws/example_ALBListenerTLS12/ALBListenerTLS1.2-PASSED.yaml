AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This template deploys an Application Load Balancer 
Parameters:
  Subnets:
    Description: Choose a minimum of 2 subnets the ALB should be deployed to
    Type: List<AWS::EC2::Subnet::Id>
  UseHttps:
    Description: If HTTPS is used
    Type: String

Conditions:
  IsHttps:
    Fn::Equals:
      - !Ref UseHttps
      - 'true'
Resources:
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: CheckovTest
      Type: application
      Subnets: !Ref Subnets
      SecurityGroups:
        - sg-1234567

  ListenerHTTPSPASSED1:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: test-cert
      SslPolicy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06
      DefaultActions:
        - Type: forward
          TargetGroupArn: default-target-group

  ListenerHTTPPASSED2:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Host: "localhost"
            Path: "/images"
            Port: "443"
            Protocol: "HTTPS"
            Query: "query"
            StatusCode: HTTP_301

  ListenerHTTPUnknown:
     Type: AWS::ElasticLoadBalancingV2::Listener
     Properties:
       LoadBalancerArn: !Ref ApplicationLoadBalancer
       Port: 80
       Protocol: HTTP
       DefaultActions: !If
        - IsHttps
        -
          - Type: "redirect"
            RedirectConfig:
              Protocol: "HTTPS"
              Port: 443
              Path: "/"
              StatusCode: "HTTP_301"
        -
          - TargetGroupArn: default-target-group
            Type: forward

  NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: CheckovTest
      Type: network
      Subnets: !Ref Subnets

  ListenerTLSPASSED1:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: 443
      Protocol: TLS
      Certificates:
        - CertificateArn: test-cert
      SslPolicy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06
      DefaultActions:
        - Type: forward
          TargetGroupArn: default-target-group

  ListenerTLSPASSED2:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: 443
      Protocol: TLS
      Certificates:
        - CertificateArn: test-cert
      SslPolicy: ELBSecurityPolicy-TLS13-1-2-Ext2-2021-06
      DefaultActions:
        - Type: forward
          TargetGroupArn: default-target-group

  ListenerTLSPASSED3:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: 443
      Protocol: TLS
      Certificates:
        - CertificateArn: test-cert
      SslPolicy: ELBSecurityPolicy-TLS13-1-3-2021-06
      DefaultActions:
        - Type: forward
          TargetGroupArn: default-target-group

  ListenerTCPPASSED4:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: 443
      Protocol: TCP
      DefaultActions:
        - Type: forward
          TargetGroupArn: default-target-group
