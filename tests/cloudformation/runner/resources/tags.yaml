Resources:
  DataBucket:
    # Public, not encrypted, no access logs, no versioning
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub "${AWS::AccountId}-data"
      Tags:
        - Key: Simple
          Value: Value
        - Key: Name
          Value: !Sub "${AWS::AccountId}-data"
        - Key: Environment
          Value: !Sub
            - long-form-sub-${account}
            - account: test
        - Key: Account
          Value: !Sub
            - long-form-sub-${account}
            - { account: !Ref  AWS::AccountId }
  NoTags:
    # Public, not encrypted, no access logs, no versioning
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub "${AWS::AccountId}-notags"
  EKSClusterNodegroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName: !Ref ClusterName
      NodegroupName: !Ref NodeGroupName
      NodeRole: !GetAtt EKSNodegroupIAMRole.Arn
      InstanceTypes: !Ref NodeGroupInstanceType
      ScalingConfig:
        MinSize: !Ref NodeGroupAmount
        DesiredSize: !Ref NodeGroupAmount
        MaxSize: !Ref NodeGroupAmount
      Subnets: !Ref VPCSubnets
      Tags:
        Name: !Join ["-", [!Ref ClusterName, EKS, !Ref NodeGroupName]]
