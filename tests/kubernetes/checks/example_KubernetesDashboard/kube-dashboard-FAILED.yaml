---
# Source: kubernetes-dashboard/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kubernetes-dashboard
    chart: kubernetes-dashboard-1.10.1
    heritage: Helm
    release: helm
  name: helm-kubernetes-dashboard
  namespace: default
---
# Source: kubernetes-dashboard/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: kubernetes-dashboard
    chart: kubernetes-dashboard-1.10.1
    heritage: Helm
    release: helm
  name: helm-kubernetes-dashboard
  namespace: default
type: Opaque
---
# Source: kubernetes-dashboard/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: kubernetes-dashboard
    chart: kubernetes-dashboard-1.10.1
    heritage: Helm
    release: helm
  name: helm-kubernetes-dashboard
  namespace: default
rules:
  # Allow Dashboard to create 'kubernetes-dashboard-key-holder' secret.
- apiGroups:
    - ""
  resources:
    - secrets
  verbs:
    - create

  # Allow Dashboard to create 'kubernetes-dashboard-settings' config map.
- apiGroups:
    - ""
  resources:
    - configmaps
  verbs:
    - create

  # Allow Dashboard to get, update and delete Dashboard exclusive secrets.
- apiGroups:
    - ""
  resources:
    - secrets
  resourceNames:
    - kubernetes-dashboard-key-holder
    - helm-kubernetes-dashboard
  verbs:
    - get
    - update
    - delete

  # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.
- apiGroups:
    - ""
  resources:
    - configmaps
  resourceNames:
    - kubernetes-dashboard-settings
  verbs:
    - get
    - update

  # Allow Dashboard to get metrics from heapster.
- apiGroups:
    - ""
  resources:
    - services
  resourceNames:
    - heapster
  verbs:
    - proxy
- apiGroups:
    - ""
  resources:
    - services/proxy
  resourceNames:
    - heapster
    - "http:heapster:"
    - "https:heapster:"
  verbs:
    - get
---
# Source: kubernetes-dashboard/templates/rolebinding.yaml
# Role binding for clusterAdminRole == false and clusterReadOnlyRole=false
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: kubernetes-dashboard
    chart: kubernetes-dashboard-1.10.1
    heritage: Helm
    release: helm
  name: helm-kubernetes-dashboard
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: helm-kubernetes-dashboard
subjects:
  - kind: ServiceAccount
    name: helm-kubernetes-dashboard
    namespace: default
---
# Source: kubernetes-dashboard/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: helm-kubernetes-dashboard
  labels:
    app: kubernetes-dashboard
    chart: kubernetes-dashboard-1.10.1
    release: helm
    heritage: Helm
    kubernetes.io/cluster-service: "true"
spec:
  type: ClusterIP
  ports:
  - port: 443
    targetPort: 8443
    name: "https"
  selector:
    app: kubernetes-dashboard
    release: helm
---
# Source: kubernetes-dashboard/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helm-kubernetes-dashboard
  labels:
    app: kubernetes-dashboard
    chart: kubernetes-dashboard-1.10.1
    release: helm
    heritage: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: kubernetes-dashboard
      release: helm
  template:
    metadata:
      labels:
        app: kubernetes-dashboard
        release: helm
    spec:
      serviceAccountName: helm-kubernetes-dashboard
      containers:
      - name: kubernetes-dashboard
        image: "k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1"
        imagePullPolicy: IfNotPresent
        args:
          - --auto-generate-certificates
        ports:
        - name: https
          containerPort: 8443
          protocol: TCP
        volumeMounts:
        - name: kubernetes-dashboard-certs
          mountPath: /certs
          # Create on-disk volume to store exec logs
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /
            port: 8443
          initialDelaySeconds: 30
          timeoutSeconds: 30
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
      volumes:
      - name: kubernetes-dashboard-certs
        secret:
          secretName: helm-kubernetes-dashboard
      - name: tmp-volume
        emptyDir: {}
