name: PR Test

on: pull_request

permissions:
  contents: read

jobs:
  build-release-artifacts-arm:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: linux
            distro: ubuntu_latest
          - os: windows-latest
            name: windows
            distro: ubuntu18.04
            suffix: '.exe'
#    needs: [ github-release ]
#    if: needs.github-release.outputs.upload_url != ''
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9  # v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0  # v4
        with:
          python-version: 3.7
      - name: Test arch
        run: |
          cat << EOF > arch.py
import platform

print(platform.uname()[4])
EOF
          
          python -m arch.py
#      - name: Install pipenv
#        run: |
#          python -m pip install --no-cache-dir --upgrade pipenv
#      - name: Install deps and run pyinstaller
#        run: |
#          pipenv sync
#          pipenv run pip install pyinstaller
#      - name: Build executable
#        run: pipenv run pyinstaller checkov.spec
#      - name: Windows - zip artifact
#        if: matrix.os == 'windows-latest'
#        run: |
#          cd dist
#          dir
#          cd ..
#          tar.exe -a -c -f checkov.zip dist\\checkov.exe
#      - name: Linux/Mac - zip artifact
#        if: matrix.os != 'windows-latest'
#        run: zip checkov.zip dist/checkov
