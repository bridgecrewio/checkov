name: PR Test

on: pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: pre-commit
        uses: pre-commit/action@v2.0.3

  cfn-lint:
    runs-on: [self-hosted, public, linux, x64]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install cfn-lint
        run: |
          pip install cfn-lint==0.53.0
      - name: Lint Cloudformation templates
        run: |
          cfn-lint tests/cloudformation/checks/resource/aws/**/* -i W

  unit-tests:
    strategy:
      fail-fast: true
      matrix:
        python: ["3.7", "3.8", "3.9", "3.10"]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install pipenv
        run: |
          python -m pip install --no-cache-dir --upgrade pipenv
      - name: Install dependencies
        run: |
          pipenv --python ${{ matrix.python }}
          pipenv install --dev
      - uses: imranismail/setup-kustomize@v1
      - name: Unit tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pipenv run python -m pytest tests

  integration-tests:
    strategy:
      fail-fast: true
      matrix:
        python: ["3.7", "3.8", "3.9", "3.10"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/setup-node@v2
      - uses: azure/setup-helm@v1  # don't update till fixed https://github.com/Azure/setup-helm/issues/59
      - uses: imranismail/setup-kustomize@v1
        if: ${{ runner.os != 'windows' }}
      - name: Install pipenv
        run: |
          python -m pip install --no-cache-dir --upgrade pipenv
      - name: Build & install checkov package
        run: |
          pipenv --python ${{ matrix.python }}
          pipenv run pip install --upgrade pip==21.1.1
          pipenv run pip install pytest pytest-xdist
          pipenv run python setup.py sdist bdist_wheel
          bash -c 'pipenv run pip install dist/checkov-*.whl'
      - name: Clone Terragoat - vulnerable terraform
        run: git clone https://github.com/bridgecrewio/terragoat
      - name: Clone Cfngoat - vulnerable cloudformation
        run: git clone https://github.com/bridgecrewio/cfngoat
      - name: Clone Kubernetes-goat - vulnerable kubernetes
        run: git clone https://github.com/madhuakula/kubernetes-goat
      - name: Create checkov reports
        env:
          LOG_LEVEL: INFO
          BC_KEY: ${{ secrets.BC_API_KEY }}
        run: |
          # Just making sure the API key tests don't run on PRs
          bash -c './integration_tests/prepare_data.sh ${{ matrix.os }} 3.8'
      - name: Run integration tests
        run: |
          pipenv run pytest integration_tests -k 'not api_key'

  performance-tests:
    env:
      working-directory: ./performance_tests
      python-version: 3.7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - uses: actions/setup-node@v2
      - uses: azure/setup-helm@v1  # don't update till fixed https://github.com/Azure/setup-helm/issues/59
      - uses: imranismail/setup-kustomize@v1
      - name: Install pipenv
        run: |
          python -m pip install --no-cache-dir --upgrade pipenv
      - name: Build & install checkov package
        run: |
          pipenv --python ${{ env.python-version }}
          pipenv run pip install --upgrade pip==21.1.1
          pipenv run pip install pytest pytest-benchmark
          pipenv run python setup.py sdist bdist_wheel
          bash -c 'pipenv run pip install dist/checkov-*.whl'
      - name: Clone terraform-aws-components
        run: git clone --branch 0.182.0 https://github.com/cloudposse/terraform-aws-components.git
        working-directory: ${{ env.working-directory }}
      - name: Clone aws-cloudformation-templates
        run: git clone --branch 0.0.1 https://github.com/awslabs/aws-cloudformation-templates.git
        working-directory: ${{ env.working-directory }}
      - name: Clone kubernetes-yaml-templates
        run: git clone https://github.com/dennyzhang/kubernetes-yaml-templates.git
        working-directory: ${{ env.working-directory }}
      - name: Run performance tests
        run: |
          pipenv run pytest
        working-directory: ${{ env.working-directory }}
