name: build

on: 
  push:
    branches:
    - master
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - uses: dschep/install-pipenv-action@v1
      - name: Install dependencies
        run: |
          pipenv install --dev
      - name: Test with pytest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pipenv run python -m coverage run -m pytest tests
          pipenv run python -m coverage report
          pipenv run python -m coverage html
          pipenv run python -m coverage_badge -o coverage.svg -f
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - uses: dschep/install-pipenv-action@v1
      - name: Build & install checkov package
        run: |
          pipenv run pip install pytest
          pipenv run python setup.py sdist bdist_wheel
          pipenv run pip install dist/checkov-*
      - name: Clone Terragoat - vulnerable terraform
        uses: actions/checkout@master
        with:
          repository: bridgecrewio/terragoat  # clone https://github.com/bridgecrewio/terragoat/
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: false
          path: 'terragoat'
      - name: Clone Cfngoat - vulnerable cloudformation
        uses: actions/checkout@master
        with:
          repository: bridgecrewio/cfngoat  # clone https://github.com/bridgecrewio/cfngoat/
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: false
          path: 'cfngoat'
      - name: Clone Kubernetes-goat - vulnerable kubernetes
        uses: actions/checkout@master
        with:
          repository: madhuakula/kubernetes-goat  # clone https://github.com/madhuakula/kubernetes-goat
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: false
          path: 'kubernetes-goat'
      - name: Create checkov reports
        run: |
          pipenv run checkov -s -d terragoat/terraform/ -o json > checkov_report_terragoat.json
          pipenv run checkov -s -d cfngoat/ -o json > checkov_report_cfngoat.json
          pipenv run checkov -s -d kubernetes-goat/ -o json > checkov_report_kubernetes-goat.json

      - name: Run integration tests
        run: |
          pipenv run pytest integration_tests
  bump-version:
    needs: integration-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - uses: dschep/install-pipenv-action@v1
      - name: Install dependencies
        run: |
          pipenv install --dev
      - name: update docs and bump version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "latest tag: $latest_tag"
          new_tag=$(echo $latest_tag | awk -F. -v a="$1" -v b="$2" -v c="$3" '{printf("%d.%d.%d", $1+a, $2+b , $3+1)}')
          echo "new tag: $new_tag"

          ## update docs
          export PYTHONPATH='.'
          export scansdoc=docs/3.Scans/resource-scans.md
          echo "---" > $scansdoc
          echo "layout: default" >> $scansdoc
          echo "title: Resource scans" >> $scansdoc
          echo "nav_order: 1" >> $scansdoc
          echo "---" >> $scansdoc
          echo "" >> $scansdoc
          echo "# Resource scans (auto generated)" >> $scansdoc
          echo "" >> $scansdoc
          git pull
          pipenv run python ./checkov/common/util/docs_generator.py >> $scansdoc

          git commit --reuse-message=HEAD@{1} $scansdoc || echo "No changes to commit"

          ## update python version
          echo "version = '$new_tag'" > 'checkov/version.py'
          echo "checkov==$new_tag" > 'kubernetes/requirements.txt'

          git commit --reuse-message=HEAD@{1} checkov/version.py kubernetes/requirements.txt HomebrewFormula/checkov.rb coverage.svg || echo "No changes to commit"
          git push origin
          git tag $new_tag
          git push origin $new_tag

  publish-package:
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - uses: dschep/install-pipenv-action@v1
      - name: Install dependencies
        run: |
          pipenv install --dev
      - name: create python package
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git fetch --tags
          git pull
          pipenv run python setup.py sdist bdist_wheel
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
      - name: sleep and wait for package to refresh
        run: |
          sleep 2m
  update-brew:
    needs: publish-package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - uses: dschep/install-pipenv-action@v1
      - name: publish brew
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          pipenv run pip install homebrew-pypi-poet
          pipenv run pip install checkov -U
          git pull
          pipenv run poet -f checkov > HomebrewFormula/checkov.rb
          git commit --reuse-message=HEAD@{1} HomebrewFormula/checkov.rb || echo "No brew changes to commit"
          git push origin
  update-bridgecrew-projects:
    needs: publish-package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: update checkov release
        run: |
          curl -XPOST -u "${{ secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/bridgecrewio/bridgecrew-py/dispatches --data '{"event_type": "build"}'
          curl -XPOST -u "${{ secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/bridgecrewio/checkov-action/dispatches --data '{"event_type": "build"}'
          curl -XPOST -u "${{ secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/bridgecrewio/checkovdb/dispatches --data '{"event_type": "build"}'
          curl -XPOST -u "${{ secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/bridgecrewio/relations-graph/dispatches --data '{"event_type": "checkov-upgrade"}'
  publish-checkov-dockerhub:
    runs-on: ubuntu-latest
    needs: publish-package
    steps:
      - uses: actions/checkout@master
      - name: Get release version
        id: get_version
        run: |
          checkov_version=$(curl -sL https://api.github.com/repos/bridgecrewio/checkov/tags | jq -r '.[0]["name"]' )
          echo ::set-env name=RELEASE_VERSION::$(echo $checkov_version)

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: bridgecrew/checkov
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,${{ env.RELEASE_VERSION }}"
  publish-checkov-k8s-dockerhub:
    runs-on: ubuntu-latest
    needs: publish-package
    steps:
      - uses: actions/checkout@master
      - name: update checkov-k8s version
        run: |
          checkov_version=$(curl -sL https://api.github.com/repos/bridgecrewio/checkov/tags | jq -r '.[0]["name"]' )
          echo ::set-env name=RELEASE_VERSION::$(echo $checkov_version)
          echo $RELEASE_VERSION
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: bridgecrew/checkov-k8s
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,${{ env.RELEASE_VERSION }}"
          dockerfile: kubernetes/Dockerfile